"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[47614],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},i="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),i=u(r),m=a,f=i["".concat(c,".").concat(m)]||i[m]||p[m]||s;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d[i]="string"==typeof e?e:a,o[1]=d;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9873:(e,t,r)=>{r.r(t),r.d(t,{Badge:()=>m,Bullet:()=>i,SpecifiedBy:()=>p,assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(87462),a=r(67294),s=r(3905);const o={id:"update-customer-address",title:"updateCustomerAddress",hide_table_of_contents:!1},d=void 0,c={unversionedId:"demand/api/graphql-storefront/reference/mutations/update-customer-address",id:"demand/api/graphql-storefront/reference/mutations/update-customer-address",title:"updateCustomerAddress",description:"Updates an existing CustomerAddress",source:"@site/docs/demand/api/graphql-storefront/reference/mutations/update-customer-address.mdx",sourceDirName:"demand/api/graphql-storefront/reference/mutations",slug:"/demand/api/graphql-storefront/reference/mutations/update-customer-address",permalink:"/demand/api/graphql-storefront/reference/mutations/update-customer-address",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-storefront/reference/mutations/update-customer-address.mdx",tags:[],version:"current",frontMatter:{id:"update-customer-address",title:"updateCustomerAddress",hide_table_of_contents:!1},sidebar:"demandApiStorefrontSidebar",previous:{title:"mergeDeviceCartIntoCustomerCart",permalink:"/demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart"},next:{title:"updateCustomerCheckoutOrderItems",permalink:"/demand/api/graphql-storefront/reference/mutations/update-customer-checkout-order-items"}},u={},l=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>updateCustomerAddress.<b>customerToken</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-updatecustomeraddressbcustomertokenbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>updateCustomerAddress.<b>input</b></code><Bullet /><code>CustomerAddressUpdateInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-updatecustomeraddressbinputbcodecustomeraddressupdateinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>CustomerAddress</code> <Badge class="secondary" text="object"/>',id:"customeraddress-",level:4}],i=()=>(0,s.kt)(a.Fragment,null,(0,s.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,s.kt)(a.Fragment,null,"Specification",(0,s.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,s.kt)(a.Fragment,null,(0,s.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:l,Bullet:i,SpecifiedBy:p,Badge:m};function g(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Updates an existing CustomerAddress"),(0,s.kt)("p",null,"Requires the customeraddress/write scope on the associated DemandHq."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"updateCustomerAddress(\n  customerToken: String!\n  input: CustomerAddressUpdateInput!\n): CustomerAddress\n")),(0,s.kt)("h3",{id:"arguments"},"Arguments"),(0,s.kt)("h4",{id:"code-style-fontweight-normal-updatecustomeraddressbcustomertokenbcodestring--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"updateCustomerAddress.",(0,s.kt)("b",null,"customerToken"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/scalars/string"},(0,s.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,s.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h4",{id:"code-style-fontweight-normal-updatecustomeraddressbinputbcodecustomeraddressupdateinput--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"updateCustomerAddress.",(0,s.kt)("b",null,"input"))),(0,s.kt)(i,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/inputs/customer-address-update-input"},(0,s.kt)("inlineCode",{parentName:"a"},"CustomerAddressUpdateInput!"))," ",(0,s.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h3",{id:"type"},"Type"),(0,s.kt)("h4",{id:"customeraddress-"},(0,s.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/objects/customer-address"},(0,s.kt)("inlineCode",{parentName:"a"},"CustomerAddress"))," ",(0,s.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"A customerAddress is an Address entity that is associated with a customer")))}g.isMDXComponent=!0}}]);