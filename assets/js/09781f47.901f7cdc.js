"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[8311],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=l(r),p=a,g=m["".concat(s,".").concat(p)]||m[p]||u[p]||o;return r?n.createElement(g,c(c({ref:t},d),{},{components:r})):n.createElement(g,c({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},24525:(e,t,r)=>{r.r(t),r.d(t,{Badge:()=>p,Bullet:()=>m,SpecifiedBy:()=>u,assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var n=r(87462),a=r(67294),o=r(3905);const c={id:"merge-device-cart-into-customer-cart",title:"mergeDeviceCartIntoCustomerCart",hide_table_of_contents:!1},i=void 0,s={unversionedId:"demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart",id:"demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart",title:"mergeDeviceCartIntoCustomerCart",description:"Merge a device cart into a customer cart. This is primarily done when an anonymous user logs in.",source:"@site/docs/demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart.mdx",sourceDirName:"demand/api/graphql-storefront/reference/mutations",slug:"/demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart",permalink:"/demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-storefront/reference/mutations/merge-device-cart-into-customer-cart.mdx",tags:[],version:"current",frontMatter:{id:"merge-device-cart-into-customer-cart",title:"mergeDeviceCartIntoCustomerCart",hide_table_of_contents:!1},sidebar:"demandApiStorefrontSidebar",previous:{title:"deleteCustomerAddress",permalink:"/demand/api/graphql-storefront/reference/mutations/delete-customer-address"},next:{title:"updateCustomerAddress",permalink:"/demand/api/graphql-storefront/reference/mutations/update-customer-address"}},l={},d=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>mergeDeviceCartIntoCustomerCart.<b>customerToken</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-mergedevicecartintocustomercartbcustomertokenbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>mergeDeviceCartIntoCustomerCart.<b>deviceId</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-mergedevicecartintocustomercartbdeviceidbcodestring--",level:4},{value:"Type",id:"type",level:3},{value:'<code>Cart</code> <Badge class="secondary" text="object"/>',id:"cart-",level:4}],m=()=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,o.kt)(a.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{class:"badge badge--"+e.class},e.text)),g={toc:d,Bullet:m,SpecifiedBy:u,Badge:p};function f(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Merge a device cart into a customer cart. This is primarily done when an anonymous user logs in.\nThe device cart will have its items added to the customer cart and then have\nits cartItems cleared. The new customer cart will be returned."),(0,o.kt)("p",null,"Requires the publiccart/write scope and a valid customer authentication token."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"mergeDeviceCartIntoCustomerCart(\n  customerToken: String!\n  deviceId: String!\n): Cart!\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-mergedevicecartintocustomercartbcustomertokenbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"mergeDeviceCartIntoCustomerCart.",(0,o.kt)("b",null,"customerToken"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,o.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-mergedevicecartintocustomercartbdeviceidbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"mergeDeviceCartIntoCustomerCart.",(0,o.kt)("b",null,"deviceId"))),(0,o.kt)(m,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,o.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"cart-"},(0,o.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/objects/cart"},(0,o.kt)("inlineCode",{parentName:"a"},"Cart"))," ",(0,o.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A cart is a temporary container for products that a customer or anonymous user wants to buy")))}f.isMDXComponent=!0}}]);