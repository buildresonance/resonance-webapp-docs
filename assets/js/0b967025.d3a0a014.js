"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[3535],{3905:function(e,r,n){n.d(r,{Zo:function(){return d},kt:function(){return m}});var t=n(7294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),s=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):p(p({},r),e)),n},d=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},c=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||a;return n?t.createElement(f,p(p({ref:r},d),{},{components:n})):t.createElement(f,p({ref:r},d))}));function m(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=n.length,p=new Array(a);p[0]=c;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,p[1]=o;for(var s=2;s<a;s++)p[s]=n[s];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6756:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var t=n(2122),i=n(9756),a=(n(7294),n(3905)),p=["components"],o={id:"supplier-variant-standardized-color",title:"SupplierVariantStandardizedColor"},l=void 0,s={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color",id:"developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color",isDocsHomePage:!1,title:"SupplierVariantStandardizedColor",description:"Indicates a standardized color for a variant, i.e. Blue for 'Topaz'",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-standardized-color.mdx",version:"current",frontMatter:{id:"supplier-variant-standardized-color",title:"SupplierVariantStandardizedColor"},sidebar:"apisSidebar",previous:{title:"SupplierVariantShippingDimensionUnit",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-shipping-dimension-unit"},next:{title:"SupplierVariantStatus",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-status"}},d=[{value:"Values",id:"values",children:[]}],u={toc:d};function c(e){var r=e.components,n=(0,i.Z)(e,p);return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Indicates a standardized color for a variant, i.e. Blue for 'Topaz'"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"enum SupplierVariantStandardizedColor {\n  BEIGE\n  BLACK\n  BLUE\n  BRONZE\n  BROWN\n  CLEAR\n  GOLD\n  GRAY\n  GREEN\n  MULTICOLOR\n  OFFWHITE\n  ORANGE\n  PINK\n  PURPLE\n  RED\n  SILVER\n  WHITE\n  YELLOW\n}\n")),(0,a.kt)("h3",{id:"values"},"Values"),(0,a.kt)("h4",{id:"beige"},(0,a.kt)("inlineCode",{parentName:"h4"},"BEIGE")),(0,a.kt)("h4",{id:"black"},(0,a.kt)("inlineCode",{parentName:"h4"},"BLACK")),(0,a.kt)("h4",{id:"blue"},(0,a.kt)("inlineCode",{parentName:"h4"},"BLUE")),(0,a.kt)("h4",{id:"bronze"},(0,a.kt)("inlineCode",{parentName:"h4"},"BRONZE")),(0,a.kt)("h4",{id:"brown"},(0,a.kt)("inlineCode",{parentName:"h4"},"BROWN")),(0,a.kt)("h4",{id:"clear"},(0,a.kt)("inlineCode",{parentName:"h4"},"CLEAR")),(0,a.kt)("h4",{id:"gold"},(0,a.kt)("inlineCode",{parentName:"h4"},"GOLD")),(0,a.kt)("h4",{id:"gray"},(0,a.kt)("inlineCode",{parentName:"h4"},"GRAY")),(0,a.kt)("h4",{id:"green"},(0,a.kt)("inlineCode",{parentName:"h4"},"GREEN")),(0,a.kt)("h4",{id:"multicolor"},(0,a.kt)("inlineCode",{parentName:"h4"},"MULTICOLOR")),(0,a.kt)("h4",{id:"offwhite"},(0,a.kt)("inlineCode",{parentName:"h4"},"OFFWHITE")),(0,a.kt)("h4",{id:"orange"},(0,a.kt)("inlineCode",{parentName:"h4"},"ORANGE")),(0,a.kt)("h4",{id:"pink"},(0,a.kt)("inlineCode",{parentName:"h4"},"PINK")),(0,a.kt)("h4",{id:"purple"},(0,a.kt)("inlineCode",{parentName:"h4"},"PURPLE")),(0,a.kt)("h4",{id:"red"},(0,a.kt)("inlineCode",{parentName:"h4"},"RED")),(0,a.kt)("h4",{id:"silver"},(0,a.kt)("inlineCode",{parentName:"h4"},"SILVER")),(0,a.kt)("h4",{id:"white"},(0,a.kt)("inlineCode",{parentName:"h4"},"WHITE")),(0,a.kt)("h4",{id:"yellow"},(0,a.kt)("inlineCode",{parentName:"h4"},"YELLOW")))}c.isMDXComponent=!0}}]);