"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[8104],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||p;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var p=t.length,i=new Array(p);i[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<p;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9089:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return l},toc:function(){return d},default:function(){return m}});var r=t(7462),a=t(3366),p=(t(7294),t(3905)),i=["components"],o={id:"app-type",title:"AppType"},s=void 0,c={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",id:"developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",title:"AppType",description:"This is the primary determination of which permission scopes can be requested.",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/enums",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type.mdx",tags:[],version:"current",frontMatter:{id:"app-type",title:"AppType"},sidebar:"apisSidebar",previous:{title:"AppStatus",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-status"},next:{title:"NotificationExternalDeliveryType",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/notification-external-delivery-type"}},l={},d=[{value:"Values",id:"values",level:3},{value:"<code>DEMANDHQAPP</code>",id:"demandhqapp",level:4},{value:"<code>STOREFRONTAPP</code>",id:"storefrontapp",level:4},{value:"<code>SUPPLIERAPP</code>",id:"supplierapp",level:4}],u={toc:d};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,p.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"This is the primary determination of which permission scopes can be requested.\nAn app cannot be more than one of these.\nIf something cross domain needs to exist, it should be two apps and they can communicate."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"enum AppType {\n  DEMANDHQAPP\n  STOREFRONTAPP\n  SUPPLIERAPP\n}\n")),(0,p.kt)("h3",{id:"values"},"Values"),(0,p.kt)("h4",{id:"demandhqapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"DEMANDHQAPP")),(0,p.kt)("h4",{id:"storefrontapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"STOREFRONTAPP")),(0,p.kt)("h4",{id:"supplierapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"SUPPLIERAPP")))}m.isMDXComponent=!0}}]);