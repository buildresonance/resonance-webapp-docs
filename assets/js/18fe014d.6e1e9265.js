"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[8104],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return m}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function p(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?p(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},p=Object.keys(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||p;return r?t.createElement(f,i(i({ref:n},l),{},{components:r})):t.createElement(f,i({ref:n},l))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var p=r.length,i=new Array(p);i[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<p;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9089:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var t=r(3117),a=r(102),p=(r(7294),r(3905)),i=["components"],o={id:"app-type",title:"AppType"},s=void 0,c={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",id:"developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",title:"AppType",description:"This is the primary determination of which permission scopes can be requested.",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/enums",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-type.mdx",tags:[],version:"current",frontMatter:{id:"app-type",title:"AppType"},sidebar:"apisSidebar",previous:{title:"AppStatus",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/app-status"},next:{title:"NotificationExternalDeliveryType",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/enums/notification-external-delivery-type"}},l=[{value:"Values",id:"values",children:[{value:"<code>DEMANDHQAPP</code>",id:"demandhqapp",children:[],level:4},{value:"<code>STOREFRONTAPP</code>",id:"storefrontapp",children:[],level:4},{value:"<code>SUPPLIERAPP</code>",id:"supplierapp",children:[],level:4}],level:3}],d={toc:l};function u(e){var n=e.components,r=(0,a.Z)(e,i);return(0,p.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"This is the primary determination of which permission scopes can be requested.\nAn app cannot be more than one of these.\nIf something cross domain needs to exist, it should be two apps and they can communicate."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"enum AppType {\n  DEMANDHQAPP\n  STOREFRONTAPP\n  SUPPLIERAPP\n}\n")),(0,p.kt)("h3",{id:"values"},"Values"),(0,p.kt)("h4",{id:"demandhqapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"DEMANDHQAPP")),(0,p.kt)("h4",{id:"storefrontapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"STOREFRONTAPP")),(0,p.kt)("h4",{id:"supplierapp"},(0,p.kt)("inlineCode",{parentName:"h4"},"SUPPLIERAPP")))}u.isMDXComponent=!0}}]);