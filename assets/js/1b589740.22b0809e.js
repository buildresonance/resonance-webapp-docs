"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[72215],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),l=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,g=u["".concat(d,".").concat(m)]||u[m]||s[m]||p;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,o=new Array(p);o[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var l=2;l<p;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},20659:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>m,Bullet:()=>u,SpecifiedBy:()=>s,assets:()=>l,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var a=n(87462),r=n(67294),p=n(3905);const o={id:"update-page-type-content",title:"updatePageTypeContent",hide_table_of_contents:!1},i=void 0,d={unversionedId:"demand/api/graphql-admin/reference/mutations/update-page-type-content",id:"demand/api/graphql-admin/reference/mutations/update-page-type-content",title:"updatePageTypeContent",description:"Update an existing PageTypeContent.",source:"@site/docs/demand/api/graphql-admin/reference/mutations/update-page-type-content.mdx",sourceDirName:"demand/api/graphql-admin/reference/mutations",slug:"/demand/api/graphql-admin/reference/mutations/update-page-type-content",permalink:"/demand/api/graphql-admin/reference/mutations/update-page-type-content",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-admin/reference/mutations/update-page-type-content.mdx",tags:[],version:"current",frontMatter:{id:"update-page-type-content",title:"updatePageTypeContent",hide_table_of_contents:!1},sidebar:"demandApiAdminSidebar",previous:{title:"updateOrder",permalink:"/demand/api/graphql-admin/reference/mutations/update-order"},next:{title:"updatePage",permalink:"/demand/api/graphql-admin/reference/mutations/update-page"}},l={},c=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>updatePageTypeContent.<b>input</b></code><Bullet /><code>PageTypeContentUpdateInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-updatepagetypecontentbinputbcodepagetypecontentupdateinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>PageTypeContent</code> <Badge class="secondary" text="object"/>',id:"pagetypecontent-",level:4}],u=()=>(0,p.kt)(r.Fragment,null,(0,p.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,p.kt)(r.Fragment,null,"Specification",(0,p.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,p.kt)(r.Fragment,null,(0,p.kt)("span",{className:"badge badge--"+e.class},e.text)),g={toc:c,Bullet:u,SpecifiedBy:s,Badge:m};function y(e){let{components:t,...n}=e;return(0,p.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Update an existing PageTypeContent."),(0,p.kt)("p",null,"Requires the pagetypecontent/write scope on the associated DemandHq."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"updatePageTypeContent(\n  input: PageTypeContentUpdateInput!\n): PageTypeContent!\n")),(0,p.kt)("h3",{id:"arguments"},"Arguments"),(0,p.kt)("h4",{id:"code-style-fontweight-normal-updatepagetypecontentbinputbcodepagetypecontentupdateinput--"},(0,p.kt)("a",{parentName:"h4",href:"#"},(0,p.kt)("code",{style:{fontWeight:"normal"}},"updatePageTypeContent.",(0,p.kt)("b",null,"input"))),(0,p.kt)(u,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/inputs/page-type-content-update-input"},(0,p.kt)("inlineCode",{parentName:"a"},"PageTypeContentUpdateInput!"))," ",(0,p.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,p.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,p.kt)("blockquote",null),(0,p.kt)("h3",{id:"type"},"Type"),(0,p.kt)("h4",{id:"pagetypecontent-"},(0,p.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/page-type-content"},(0,p.kt)("inlineCode",{parentName:"a"},"PageTypeContent"))," ",(0,p.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"This holds content specific to a pageType. This is generally used on a page that lists all pages for a pageType.")))}y.isMDXComponent=!0}}]);