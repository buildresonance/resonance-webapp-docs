"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[92418],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(r),d=o,m=l["".concat(s,".").concat(d)]||l[d]||f[d]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=l;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},81005:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return f}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={},s="Storefront",p={unversionedId:"concepts/demand-hqs/entities/Storefront",id:"concepts/demand-hqs/entities/Storefront",title:"Storefront",description:"A Storefront is an application of some variety that presents an e-commerce experience directly to Customers and facilitates the browsing, shopping, and ordering of Products and Variants. The primary way a Storefront gets built is by using responses from the Storefront API, which is purpose-built to handle the task.",source:"@site/docs/concepts/demand-hqs/entities/Storefront.md",sourceDirName:"concepts/demand-hqs/entities",slug:"/concepts/demand-hqs/entities/Storefront",permalink:"/concepts/demand-hqs/entities/Storefront",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/concepts/demand-hqs/entities/Storefront.md",tags:[],version:"current",frontMatter:{},sidebar:"conceptsSidebar",previous:{title:"Product",permalink:"/concepts/demand-hqs/entities/Product"},next:{title:"Variant",permalink:"/concepts/demand-hqs/entities/Variant"}},u={},f=[],l={toc:f};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storefront"},"Storefront"),(0,a.kt)("p",null,"A Storefront is an application of some variety that presents an e-commerce experience directly to ",(0,a.kt)("a",{parentName:"p",href:"Customer"},"Customers")," and facilitates the browsing, shopping, and ordering of ",(0,a.kt)("a",{parentName:"p",href:"Product"},"Products")," and ",(0,a.kt)("a",{parentName:"p",href:"Variant"},"Variants"),". The primary way a Storefront gets built is by using responses from the Storefront API, which is purpose-built to handle the task."),(0,a.kt)("p",null,"In general, Storefronts typically contain ",(0,a.kt)("a",{parentName:"p",href:"Product"},"Products")," for purchase using a ",(0,a.kt)("a",{parentName:"p",href:"Cart"},"Cart"),", which gets turned into an ",(0,a.kt)("a",{parentName:"p",href:"Order"},"Order")," by creating a Checkout. Storefronts may also contain ",(0,a.kt)("a",{parentName:"p",href:"Collection"},"Collections")," and other ",(0,a.kt)("a",{parentName:"p",href:"Page"},"Pages")," that facilitate a fuller experience."))}d.isMDXComponent=!0}}]);