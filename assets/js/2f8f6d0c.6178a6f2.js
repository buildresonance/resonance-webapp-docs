"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[76957],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),d=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=d(e.components);return o.createElement(i.Provider,{value:n},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=a,u=p["".concat(i,".").concat(m)]||p[m]||b[m]||r;return t?o.createElement(u,c(c({ref:n},s),{},{components:t})):o.createElement(u,c({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,c[1]=l;for(var d=2;d<r;d++)c[d]=t[d];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},58193:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>m,Bullet:()=>p,SpecifiedBy:()=>b,assets:()=>d,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var o=t(87462),a=t(67294),r=t(3905);const c={id:"public-taxonomy-branch-connection",title:"PublicTaxonomyBranchConnection",hide_table_of_contents:!1},l=void 0,i={unversionedId:"demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection",id:"demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection",title:"PublicTaxonomyBranchConnection",description:"Paginate through PublicTaxonomyBranches",source:"@site/docs/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection.mdx",sourceDirName:"demand/api/graphql-storefront/reference/objects",slug:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection",permalink:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-connection.mdx",tags:[],version:"current",frontMatter:{id:"public-taxonomy-branch-connection",title:"PublicTaxonomyBranchConnection",hide_table_of_contents:!1},sidebar:"demandApiStorefrontSidebar",previous:{title:"PublicStorefront",permalink:"/demand/api/graphql-storefront/reference/objects/public-storefront"},next:{title:"PublicTaxonomyBranchEdge",permalink:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-edge"}},d={},s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>PublicTaxonomyBranchConnection.<b>edges</b></code><Bullet /><code>[PublicTaxonomyBranchEdge]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-publictaxonomybranchconnectionbedgesbcodepublictaxonomybranchedge--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PublicTaxonomyBranchConnection.<b>nodes</b></code><Bullet /><code>[PublicTaxonomyBranch]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-publictaxonomybranchconnectionbnodesbcodepublictaxonomybranch--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PublicTaxonomyBranchConnection.<b>pageInfo</b></code><Bullet /><code>PageInfo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-publictaxonomybranchconnectionbpageinfobcodepageinfo--",level:4},{value:"Returned by",id:"returned-by",level:3},{value:"Member of",id:"member-of",level:3}],p=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),b=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),u={toc:s,Bullet:p,SpecifiedBy:b,Badge:m};function y(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Paginate through PublicTaxonomyBranches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type PublicTaxonomyBranchConnection {\n  edges: [PublicTaxonomyBranchEdge]!\n  nodes: [PublicTaxonomyBranch]!\n  pageInfo: PageInfo!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publictaxonomybranchconnectionbedgesbcodepublictaxonomybranchedge--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"PublicTaxonomyBranchConnection.",(0,r.kt)("b",null,"edges"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch-edge"},(0,r.kt)("inlineCode",{parentName:"a"},"[PublicTaxonomyBranchEdge]!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publictaxonomybranchconnectionbnodesbcodepublictaxonomybranch--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"PublicTaxonomyBranchConnection.",(0,r.kt)("b",null,"nodes"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch"},(0,r.kt)("inlineCode",{parentName:"a"},"[PublicTaxonomyBranch]!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publictaxonomybranchconnectionbpageinfobcodepageinfo--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"PublicTaxonomyBranchConnection.",(0,r.kt)("b",null,"pageInfo"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-storefront/reference/objects/page-info"},(0,r.kt)("inlineCode",{parentName:"a"},"PageInfo!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"returned-by"},"Returned by"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/demand/api/graphql-storefront/reference/queries/taxonomy-branches"},(0,r.kt)("inlineCode",{parentName:"a"},"taxonomyBranches")),"  ",(0,r.kt)(m,{class:"secondary",text:"query",mdxType:"Badge"})),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch"},(0,r.kt)("inlineCode",{parentName:"a"},"PublicTaxonomyBranch")),"  ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})))}y.isMDXComponent=!0}}]);