"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[36617],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,v=d["".concat(l,".").concat(f)]||d[f]||c[f]||a;return n?r.createElement(v,p(p({ref:t},u),{},{components:n})):r.createElement(v,p({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,p=new Array(a);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,p[1]=o;for(var s=2;s<a;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97632:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),p=["components"],o={id:"supplier-variant-update-input",title:"SupplierVariantUpdateInput",hide_table_of_contents:!1},l=void 0,s={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input",id:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input",title:"SupplierVariantUpdateInput",description:"The necessary fields in order to update an existing supplierVariant",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/inputs",slug:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input.mdx",tags:[],version:"current",frontMatter:{id:"supplier-variant-update-input",title:"SupplierVariantUpdateInput",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"SupplierVariantSupplementUpdateInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-supplement-update-input"},next:{title:"SupplierVariantWeightInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input"}},u={},c=[{value:"Fields",id:"fields",level:3},{value:"<code>contentItemIds</code> (<code>[ID]</code>)",id:"contentitemids-id",level:4},{value:"<code>externalVariantId</code> (<code>String</code>)",id:"externalvariantid-string",level:4},{value:"<code>inventoryPolicy</code> (<code>SupplierVariantInventoryPolicy</code>)",id:"inventorypolicy-suppliervariantinventorypolicy",level:4},{value:"<code>inventoryQuantity</code> (<code>Int</code>)",id:"inventoryquantity-int",level:4},{value:"<code>optionValues</code> (<code>[String!]</code>)",id:"optionvalues-string",level:4},{value:"<code>supplierVariantId</code> (<code>ID!</code>)",id:"suppliervariantid-id",level:4}],d={toc:c};function f(e){var t=e.components,n=(0,i.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The necessary fields in order to update an existing supplierVariant"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"input SupplierVariantUpdateInput {\n  contentItemIds: [ID]\n  externalVariantId: String\n  inventoryPolicy: SupplierVariantInventoryPolicy\n  inventoryQuantity: Int\n  optionValues: [String!]\n  supplierVariantId: ID!\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"contentitemids-id"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"contentItemIds"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,a.kt)("inlineCode",{parentName:"a"},"[ID]")),")"),(0,a.kt)("p",null,"Associates contentItems with this variant"),(0,a.kt)("h4",{id:"externalvariantid-string"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"externalVariantId"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,a.kt)("h4",{id:"inventorypolicy-suppliervariantinventorypolicy"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"inventoryPolicy"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-inventory-policy"},(0,a.kt)("inlineCode",{parentName:"a"},"SupplierVariantInventoryPolicy")),")"),(0,a.kt)("h4",{id:"inventoryquantity-int"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"inventoryQuantity"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,a.kt)("h4",{id:"optionvalues-string"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"optionValues"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,a.kt)("p",null,"An array of the option values that make up this variant.\nFor example, a product with a color and size option would have two option values,\none for each of the color and size options, i.e. ",'["Red", "Small"]','\nMust have 1-3, and it should match the number of options in the product, but there is no validation to do so.\nSet this to "No Option" if you don\'t want to use options for this product and this is the only variant.\nSee ',(0,a.kt)("a",{parentName:"p",href:"https://docs.buildresonance.com/concepts/products/#no-option-products"},"https://docs.buildresonance.com/concepts/products/#no-option-products")," for more info."),(0,a.kt)("h4",{id:"suppliervariantid-id"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"supplierVariantId"))," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,a.kt)("inlineCode",{parentName:"a"},"ID!")),")"))}f.isMDXComponent=!0}}]);