"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[44305],{50045:(e,n,t)=>{t.d(n,{P:()=>o,R:()=>i});var r=Object.defineProperty,a=(e,n)=>r(e,"name",{value:n,configurable:!0});class i{constructor(e,n){this.containsPosition=e=>this.start.line===e.line?this.start.character<=e.character:this.end.line===e.line?this.end.character>=e.character:this.start.line<=e.line&&this.end.line>=e.line,this.start=e,this.end=n}setStart(e,n){this.start=new o(e,n)}setEnd(e,n){this.end=new o(e,n)}}a(i,"Range");class o{constructor(e,n){this.lessThanOrEqualTo=e=>this.line<e.line||this.line===e.line&&this.character<=e.character,this.line=e,this.character=n}setLine(e){this.line=e}setCharacter(e){this.character=e}}a(o,"Position")},44305:(e,n,t)=>{t.r(n);var r=t(97480),a=t(29551),i=t(46364),o=t(93058);function s(e){return{Field(n){const t=e.getFieldDef(),r=null==t?void 0:t.deprecationReason;if(t&&null!=r){const o=e.getParentType();null!=o||(0,a.k)(!1),e.reportError(new i.__(`The field ${o.name}.${t.name} is deprecated. ${r}`,{nodes:n}))}},Argument(n){const t=e.getArgument(),r=null==t?void 0:t.deprecationReason;if(t&&null!=r){const o=e.getDirective();if(null!=o)e.reportError(new i.__(`Directive "@${o.name}" argument "${t.name}" is deprecated. ${r}`,{nodes:n}));else{const o=e.getParentType(),s=e.getFieldDef();null!=o&&null!=s||(0,a.k)(!1),e.reportError(new i.__(`Field "${o.name}.${s.name}" argument "${t.name}" is deprecated. ${r}`,{nodes:n}))}}},ObjectField(n){const t=(0,o.xC)(e.getParentInputType());if((0,o.hL)(t)){const r=t.getFields()[n.name.value],a=null==r?void 0:r.deprecationReason;null!=a&&e.reportError(new i.__(`The input field ${t.name}.${r.name} is deprecated. ${a}`,{nodes:n}))}},EnumValue(n){const t=e.getEnumValue(),r=null==t?void 0:t.deprecationReason;if(t&&null!=r){const s=(0,o.xC)(e.getInputType());null!=s||(0,a.k)(!1),e.reportError(new i.__(`The enum value "${s.name}.${t.name}" is deprecated. ${r}`,{nodes:n}))}}}}var l=t(52877),c=t(77990),u=t(69538),d=t(93201),h=t(22618),p=t(53274),g=t(25580),m=t(84873),f=t(96300),v=t(34800),y=t(42266),w=t(92767),$=t(8783),E=t(81294),P=t(88081),b=t(5311),_=t(78758),k=t(97359),C=t(16918),R=t(10785),T=t(4032),L=t(50045),x=(t(67294),t(73935),Object.defineProperty),D=(e,n)=>x(e,"name",{value:n,configurable:!0});const Q=[l.t,c.q,u.P,d.L,h.y,p.o,g.I,m.J,f.k,v.g,y.L,w.P];function G(e,n,t,r,a){const i=$.i.filter((e=>e!==E.J&&e!==P.i&&(!r||e!==b.a)));t&&Array.prototype.push.apply(i,t),a&&Array.prototype.push.apply(i,Q);return(0,_.Gu)(e,n,i).filter((e=>{if(e.message.includes("Unknown directive")&&e.nodes){const n=e.nodes[0];if(n&&n.kind===k.h.DIRECTIVE){const e=n.name.value;if("arguments"===e||"argumentDefinitions"===e)return!1}}return!0}))}D(G,"validateWithCustomRules");const F={["Error"]:1,["Warning"]:2,["Information"]:3,["Hint"]:4},S=D(((e,n)=>{if(!e)throw new Error(n)}),"invariant");function I(e,n=null,t,r,a){var o,s;let l=null,c="";a&&(c="string"==typeof a?a:a.reduce(((e,n)=>e+(0,C.S)(n)+"\n\n"),""));const u=c?`${e}\n\n${c}`:e;try{l=(0,R.Qc)(u)}catch(d){if(d instanceof i.__){const e=O(null!==(s=null===(o=d.locations)||void 0===o?void 0:o[0])&&void 0!==s?s:{line:0,column:0},u);return[{severity:F.Error,message:d.message,source:"GraphQL: Syntax",range:e}]}throw d}return V(l,n,t,r)}function V(e,n=null,t,r){if(!n)return[];const a=G(n,e,t,r).flatMap((e=>A(e,F.Error,"Validation"))),i=(0,_.Gu)(n,e,[s]).flatMap((e=>A(e,F.Warning,"Deprecation")));return a.concat(i)}function A(e,n,t){if(!e.nodes)return[];const r=[];return e.nodes.forEach(((a,i)=>{const o="Variable"!==a.kind&&"name"in a&&void 0!==a.name?a.name:"variable"in a&&void 0!==a.variable?a.variable:a;if(o){S(e.locations,"GraphQL validation error requires locations.");const a=e.locations[i],s=q(o),l=a.column+(s.end-s.start);r.push({source:`GraphQL: ${t}`,message:e.message,severity:n,range:new L.R(new L.P(a.line-1,a.column-1),new L.P(a.line-1,l))})}})),r}function O(e,n){const t=(0,T.o)(),r=t.startState(),a=n.split("\n");S(a.length>=e.line,"Query text must have more lines than where the error happened");let i=null;for(let c=0;c<e.line;c++)for(i=new T.C(a[c]);!i.eol();){if("invalidchar"===t.token(i,r))break}S(i,"Expected Parser stream to be available.");const o=e.line-1,s=i.getStartOfToken(),l=i.getCurrentPosition();return new L.R(new L.P(o,s),new L.P(o,l))}function q(e){const n=e.loc;return S(n,"Expected ASTNode to have a location."),n}D(I,"getDiagnostics"),D(V,"validateQuery"),D(A,"annotations"),D(O,"getRange"),D(q,"getLocation");const j=["error","warning","information","hint"],W={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};r.C.registerHelper("lint","graphql",((e,n)=>{const{schema:t,validationRules:a,externalFragments:i}=n;return I(e,t,a,void 0,i).map((e=>({message:e.message,severity:e.severity?j[e.severity-1]:j[0],type:e.source?W[e.source]:void 0,from:r.C.Pos(e.range.start.line,e.range.start.character),to:r.C.Pos(e.range.end.line,e.range.end.character)})))}))}}]);