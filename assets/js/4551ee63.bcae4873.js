"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[35936],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,m=d["".concat(l,".").concat(u)]||d[u]||v[u]||o;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},34528:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:3},i="How to Menu (Nav)",s={unversionedId:"concepts/demand-hqs/how-to-nav",id:"concepts/demand-hqs/how-to-nav",title:"How to Menu (Nav)",description:"NavType",source:"@site/docs/concepts/demand-hqs/how-to-nav.md",sourceDirName:"concepts/demand-hqs",slug:"/concepts/demand-hqs/how-to-nav",permalink:"/concepts/demand-hqs/how-to-nav",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/concepts/demand-hqs/how-to-nav.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"conceptsSidebar",previous:{title:"DemandHq Permissions (DemandHqIdentity)",permalink:"/concepts/demand-hqs/permissions"},next:{title:"Recommendations",permalink:"/concepts/demand-hqs/recommendations"}},l={},c=[{value:"NavType",id:"navtype",level:2},{value:"NavLevel",id:"navlevel",level:2}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-menu-nav"},"How to Menu (Nav)"),(0,r.kt)("h2",{id:"navtype"},"NavType"),(0,r.kt)("p",null,"This describe the purpose of an entire tree, and can also be considered the tree itself as a Navigational Hierarchy is encapsulated within a single NavType. This could be something like ",(0,r.kt)("inlineCode",{parentName:"p"},"main-menu")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"blog-page-sidebar-3"),". NavType is required to query in pretty much every case, as Navs are only unique in anyway within a single NavType (you could have an otherwise identical Nav in two different NavTypes)."),(0,r.kt)("h2",{id:"navlevel"},"NavLevel"),(0,r.kt)("p",null,"NavLevel indicates the level a Nav is within a NavType. This is a digit between 0 and 6 (There are seven possible levels of Navigation, or six if you do not include the Root). For NavLevel 0 in a NavType, there can only ever be a single Nav (the root). From the root, any number of child Navs can be created on NavLevel 1, and the same is true for each new level."),(0,r.kt)("p",null,"All Navs must have a parent besides the root. All Navs may also optionally have children (besides Navs in NavLevel 6)."),(0,r.kt)("p",null,"NavType + NavLevel is the primary way to SCAN or VERTICALLY query within a NavType, as in, crawl through Navs continually exposing children until you have all of the data you require."))}d.isMDXComponent=!0}}]);