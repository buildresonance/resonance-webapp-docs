"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[10754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,y=u["".concat(i,".").concat(m)]||u[m]||s[m]||r;return n?o.createElement(y,l(l({ref:t},d),{},{components:n})):o.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,l[1]=c;for(var p=2;p<r;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62806:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>m,Bullet:()=>u,SpecifiedBy:()=>s,assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var o=n(87462),a=n(67294),r=n(3905);const l={id:"update-collection-type-content",title:"updateCollectionTypeContent",hide_table_of_contents:!1},c=void 0,i={unversionedId:"demand/api/graphql-admin/reference/mutations/update-collection-type-content",id:"demand/api/graphql-admin/reference/mutations/update-collection-type-content",title:"updateCollectionTypeContent",description:"Update an existing CollectionTypeContent.",source:"@site/docs/demand/api/graphql-admin/reference/mutations/update-collection-type-content.mdx",sourceDirName:"demand/api/graphql-admin/reference/mutations",slug:"/demand/api/graphql-admin/reference/mutations/update-collection-type-content",permalink:"/demand/api/graphql-admin/reference/mutations/update-collection-type-content",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-admin/reference/mutations/update-collection-type-content.mdx",tags:[],version:"current",frontMatter:{id:"update-collection-type-content",title:"updateCollectionTypeContent",hide_table_of_contents:!1},sidebar:"demandApiAdminSidebar",previous:{title:"updateAppPermissions",permalink:"/demand/api/graphql-admin/reference/mutations/update-app-permissions"},next:{title:"updateCollection",permalink:"/demand/api/graphql-admin/reference/mutations/update-collection"}},p={},d=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>updateCollectionTypeContent.<b>input</b></code><Bullet /><code>CollectionTypeContentUpdateInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-updatecollectiontypecontentbinputbcodecollectiontypecontentupdateinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>CollectionTypeContent</code> <Badge class="secondary" text="object"/>',id:"collectiontypecontent-",level:4}],u=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:d,Bullet:u,SpecifiedBy:s,Badge:m};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Update an existing CollectionTypeContent."),(0,r.kt)("p",null,"Requires the collectiontypecontent/write scope on the associated DemandHq."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"updateCollectionTypeContent(\n  input: CollectionTypeContentUpdateInput!\n): CollectionTypeContent!\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-updatecollectiontypecontentbinputbcodecollectiontypecontentupdateinput--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"updateCollectionTypeContent.",(0,r.kt)("b",null,"input"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/inputs/collection-type-content-update-input"},(0,r.kt)("inlineCode",{parentName:"a"},"CollectionTypeContentUpdateInput!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"collectiontypecontent-"},(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/collection-type-content"},(0,r.kt)("inlineCode",{parentName:"a"},"CollectionTypeContent"))," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This holds content specific to a collectionType. This is generally used on a\npage that lists all collections for a collectionType.")))}f.isMDXComponent=!0}}]);