"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[32908],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(t),d=a,m=f["".concat(l,".").concat(d)]||f[d]||c[d]||p;return t?n.createElement(m,o(o({ref:r},s),{},{components:t})):n.createElement(m,o({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var p=t.length,o=new Array(p);o[0]=f;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<p;u++)o[u]=t[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4955:function(e,r,t){t.r(r),t.d(r,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var n=t(87462),a=t(63366),p=(t(67294),t(3905)),o=["components"],i={id:"filter-operator",title:"FilterOperator",hide_table_of_contents:!1},l=void 0,u={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator",id:"developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator",title:"FilterOperator",description:"Indicates how a filter should behave, defaults to OR",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator.mdx",tags:[],version:"current",frontMatter:{id:"filter-operator",title:"FilterOperator",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"AppType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/app-type"},next:{title:"PurchaseOrderNotificationType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type"}},s={},c=[{value:"Values",id:"values",level:3},{value:"<code>AND</code>",id:"and",level:4},{value:"<code>NOT</code>",id:"not",level:4},{value:"<code>OR</code>",id:"or",level:4}],f={toc:c};function d(e){var r=e.components,t=(0,a.Z)(e,o);return(0,p.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Indicates how a filter should behave, defaults to OR"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"enum FilterOperator {\n  AND\n  NOT\n  OR\n}\n")),(0,p.kt)("h3",{id:"values"},"Values"),(0,p.kt)("h4",{id:"and"},(0,p.kt)("a",{parentName:"h4",href:"#"},(0,p.kt)("inlineCode",{parentName:"a"},"AND"))),(0,p.kt)("h4",{id:"not"},(0,p.kt)("a",{parentName:"h4",href:"#"},(0,p.kt)("inlineCode",{parentName:"a"},"NOT"))),(0,p.kt)("h4",{id:"or"},(0,p.kt)("a",{parentName:"h4",href:"#"},(0,p.kt)("inlineCode",{parentName:"a"},"OR"))))}d.isMDXComponent=!0}}]);