"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[19558],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),l=s(r),f=a,m=l["".concat(u,".").concat(f)]||l[f]||c[f]||i;return r?n.createElement(m,p(p({ref:t},d),{},{components:r})):n.createElement(m,p({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=l;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var s=2;s<i;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},79299:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),p=["components"],o={id:"update-user",title:"updateUser",hide_table_of_contents:!1},u=void 0,s={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user",id:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user",title:"updateUser",description:"Update an existing User",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/mutations",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user.mdx",tags:[],version:"current",frontMatter:{id:"update-user",title:"updateUser",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"updateUserNotificationStatus",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user-notification-status"},next:{title:"AppClientOutput",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/app-client-output"}},d={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>input</code> (<code>UserUpdateInput!</code>)",id:"input-userupdateinput",level:4},{value:"Type",id:"type",level:3},{value:"<code>User</code>",id:"user",level:4}],l={toc:c};function f(e){var t=e.components,r=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Update an existing User"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"updateUser(\n  input: UserUpdateInput!\n): User!\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"input-userupdateinput"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"input"))," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/inputs/user-update-input"},(0,i.kt)("inlineCode",{parentName:"a"},"UserUpdateInput!")),")"),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"user"},(0,i.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/user"},(0,i.kt)("inlineCode",{parentName:"a"},"User"))),(0,i.kt)("p",null,"Type representing a User, or human entity"))}f.isMDXComponent=!0}}]);