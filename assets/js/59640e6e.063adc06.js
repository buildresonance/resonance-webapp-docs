"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[9324],{3905:function(e,t,p){p.d(t,{Zo:function(){return o},kt:function(){return y}});var r=p(7294);function n(e,t,p){return t in e?Object.defineProperty(e,t,{value:p,enumerable:!0,configurable:!0,writable:!0}):e[t]=p,e}function i(e,t){var p=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),p.push.apply(p,r)}return p}function a(e){for(var t=1;t<arguments.length;t++){var p=null!=arguments[t]?arguments[t]:{};t%2?i(Object(p),!0).forEach((function(t){n(e,t,p[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(p)):i(Object(p)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(p,t))}))}return e}function l(e,t){if(null==e)return{};var p,r,n=function(e,t){if(null==e)return{};var p,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)p=i[r],t.indexOf(p)>=0||(n[p]=e[p]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)p=i[r],t.indexOf(p)>=0||Object.prototype.propertyIsEnumerable.call(e,p)&&(n[p]=e[p])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),p=t;return e&&(p="function"==typeof e?e(t):a(a({},t),e)),p},o=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var p=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),c=u(p),y=n,f=c["".concat(s,".").concat(y)]||c[y]||d[y]||i;return p?r.createElement(f,a(a({ref:t},o),{},{components:p})):r.createElement(f,a({ref:t},o))}));function y(e,t){var p=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=p.length,a=new Array(i);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var u=2;u<i;u++)a[u]=p[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,p)}c.displayName="MDXCreateElement"},4902:function(e,t,p){p.r(t),p.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return o},default:function(){return c}});var r=p(2122),n=p(9756),i=(p(7294),p(3905)),a=["components"],l={id:"supplier-identity-update-input",title:"SupplierIdentityUpdateInput"},s=void 0,u={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input",id:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input",isDocsHomePage:!1,title:"SupplierIdentityUpdateInput",description:"ID Fields are required, but all other fields are optional, only included fields will be updated.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/inputs",slug:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-update-input.mdx",version:"current",frontMatter:{id:"supplier-identity-update-input",title:"SupplierIdentityUpdateInput"},sidebar:"apisSidebar",previous:{title:"SupplierIdentityPermissionsInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-permissions-input"},next:{title:"SupplierVariantContentItemUpdateInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-content-item-update-input"}},o=[{value:"Fields",id:"fields",children:[]}],d={toc:o};function c(e){var t=e.components,p=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,p,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"ID Fields are required, but all other fields are optional, only included fields will be updated."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type SupplierIdentityUpdateInput {\n  identityType: SupplierIdentityType\n  permissions: SupplierIdentityPermissionsInput\n  supplierId: ID!\n  userName: ID!\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"identitytype-supplieridentitytype"},(0,i.kt)("inlineCode",{parentName:"h4"},"identityType")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-identity-type"},(0,i.kt)("inlineCode",{parentName:"a"},"SupplierIdentityType")),")"),(0,i.kt)("p",null,"Should always be USER"),(0,i.kt)("h4",{id:"permissions-supplieridentitypermissionsinput"},(0,i.kt)("inlineCode",{parentName:"h4"},"permissions")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-identity-permissions-input"},(0,i.kt)("inlineCode",{parentName:"a"},"SupplierIdentityPermissionsInput")),")"),(0,i.kt)("h4",{id:"supplierid-id"},(0,i.kt)("inlineCode",{parentName:"h4"},"supplierId")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,i.kt)("inlineCode",{parentName:"a"},"ID!")),")"),(0,i.kt)("h4",{id:"username-id"},(0,i.kt)("inlineCode",{parentName:"h4"},"userName")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,i.kt)("inlineCode",{parentName:"a"},"ID!")),")"),(0,i.kt)("p",null,"Always a user's userName (not appClientId)"))}c.isMDXComponent=!0}}]);