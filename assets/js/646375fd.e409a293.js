"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[32633],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return l}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=d(r),l=a,f=u["".concat(s,".").concat(l)]||u[l]||m[l]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function l(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3803:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return l},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return m}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],p={id:"change-customer-cart",title:"changeCustomerCart",hide_table_of_contents:!1},s=void 0,d={unversionedId:"developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart",id:"developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart",title:"changeCustomerCart",description:"Add, Update, or Remove Items from a Customer Cart or SavedForLater.",source:"@site/docs/developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart.mdx",sourceDirName:"developers/demandhq-apis/storefront-api/graphql/reference/mutations",slug:"/developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-customer-cart.mdx",tags:[],version:"current",frontMatter:{id:"change-customer-cart",title:"changeCustomerCart",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"StringFilterInput",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/inputs/string-filter-input"},next:{title:"changeDeviceCart",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/mutations/change-device-cart"}},c={},m=[{value:"Arguments",id:"arguments",level:3},{value:"<code>addOrUpdateItems</code> (<code>CartAddOrUpdateItemsInput</code>)",id:"addorupdateitems-cartaddorupdateitemsinput",level:4},{value:"<code>customerToken</code> (<code>String!</code>)",id:"customertoken-string",level:4},{value:"<code>removeItems</code> (<code>CartRemoveItemsInput</code>)",id:"removeitems-cartremoveitemsinput",level:4},{value:"Type",id:"type",level:3},{value:"<code>Cart</code>",id:"cart",level:4}],u={toc:m};function l(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Add, Update, or Remove Items from a Customer Cart or SavedForLater."),(0,o.kt)("p",null,"Requires the publiccart/write scope and a valid customer authentication token."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"changeCustomerCart(\n  addOrUpdateItems: CartAddOrUpdateItemsInput\n  customerToken: String!\n  removeItems: CartRemoveItemsInput\n): Cart!\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"addorupdateitems-cartaddorupdateitemsinput"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"addOrUpdateItems"))," (",(0,o.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/inputs/cart-add-or-update-items-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CartAddOrUpdateItemsInput")),")"),(0,o.kt)("p",null,"The items to add or update for the cart or savedForLater. Either\naddOrUpdateItems or removeItems must be provided, and both can be provided."),(0,o.kt)("h4",{id:"customertoken-string"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"customerToken"))," (",(0,o.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,o.kt)("h4",{id:"removeitems-cartremoveitemsinput"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"removeItems"))," (",(0,o.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/inputs/cart-remove-items-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CartRemoveItemsInput")),")"),(0,o.kt)("p",null,"The items to add or update to savedForLater. Either addOrUpdateItems or\nremoveItems must be provided, and both can be provided."),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"cart"},(0,o.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/objects/cart"},(0,o.kt)("inlineCode",{parentName:"a"},"Cart"))),(0,o.kt)("p",null,"A cart is a temporary container for products that a customer or anonymous user wants to buy"))}l.isMDXComponent=!0}}]);