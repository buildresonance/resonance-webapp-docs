"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[25936],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(67294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,p=function(e,t){if(null==e)return{};var n,r,p={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var a=r.createContext({}),u=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(a.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,p=e.mdxType,i=e.originalType,a=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),y=u(n),f=p,d=y["".concat(a,".").concat(f)]||y[f]||c[f]||i;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function f(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var i=n.length,s=new Array(i);s[0]=y;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:p,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},18079:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=n(87462),p=n(63366),i=(n(67294),n(3905)),s=["components"],o={id:"supply-event-subscription-entity-type",title:"SupplyEventSubscriptionEntityType",hide_table_of_contents:!1},a=void 0,u={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type",id:"developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type",title:"SupplyEventSubscriptionEntityType",description:"This distinguishes between the types of subscriptions.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type.mdx",tags:[],version:"current",frontMatter:{id:"supply-event-subscription-entity-type",title:"SupplyEventSubscriptionEntityType",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"SupplyEventProtocol",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol"},next:{title:"VariantInventoryStatus",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/variant-inventory-status"}},l={},c=[{value:"Values",id:"values",level:3},{value:"<code>DOMAINENTITY</code>",id:"domainentity",level:4},{value:"<code>IDENTITY</code>",id:"identity",level:4}],y={toc:c};function f(e){var t=e.components,n=(0,p.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This distinguishes between the types of subscriptions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"enum SupplyEventSubscriptionEntityType {\n  DOMAINENTITY\n  IDENTITY\n}\n")),(0,i.kt)("h3",{id:"values"},"Values"),(0,i.kt)("h4",{id:"domainentity"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"DOMAINENTITY"))),(0,i.kt)("h4",{id:"identity"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"IDENTITY"))))}f.isMDXComponent=!0}}]);