"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[92992],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>y});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=d(t),u=r,y=s["".concat(l,".").concat(u)]||s[u]||p[u]||o;return t?a.createElement(y,c(c({ref:n},m),{},{components:t})):a.createElement(y,c({ref:n},m))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[s]="string"==typeof e?e:r,c[1]=i;for(var d=2;d<o;d++)c[d]=t[d];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},66636:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>u,Bullet:()=>s,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>m});var a=t(87462),r=t(67294),o=t(3905);const c={id:"taxonomy-branch",title:"taxonomyBranch",hide_table_of_contents:!1},i=void 0,l={unversionedId:"demand/api/graphql-admin/reference/queries/taxonomy-branch",id:"demand/api/graphql-admin/reference/queries/taxonomy-branch",title:"taxonomyBranch",description:"Get a TaxonomyBranch by its id.",source:"@site/docs/demand/api/graphql-admin/reference/queries/taxonomy-branch.mdx",sourceDirName:"demand/api/graphql-admin/reference/queries",slug:"/demand/api/graphql-admin/reference/queries/taxonomy-branch",permalink:"/demand/api/graphql-admin/reference/queries/taxonomy-branch",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-admin/reference/queries/taxonomy-branch.mdx",tags:[],version:"current",frontMatter:{id:"taxonomy-branch",title:"taxonomyBranch",hide_table_of_contents:!1},sidebar:"demandApiAdminSidebar",previous:{title:"supplyQuery",permalink:"/demand/api/graphql-admin/reference/queries/supply-query"},next:{title:"variantMetrics",permalink:"/demand/api/graphql-admin/reference/queries/variant-metrics"}},d={},m=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>taxonomyBranch.<b>taxonomyBranchId</b></code><Bullet /><code>ID!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchbtaxonomybranchidbcodeid--",level:4},{value:"Type",id:"type",level:3},{value:'<code>TaxonomyBranch</code> <Badge class="secondary" text="object"/>',id:"taxonomybranch-",level:4}],s=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:m,Bullet:s,SpecifiedBy:p,Badge:u};function h(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Get a TaxonomyBranch by its id."),(0,o.kt)("p",null,"Requires the user to have the taxonomyBranch/read permission on the associated DemandHq."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"taxonomyBranch(\n  taxonomyBranchId: ID!\n): TaxonomyBranch\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchbtaxonomybranchidbcodeid--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"taxonomyBranch.",(0,o.kt)("b",null,"taxonomyBranchId"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/id"},(0,o.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,o.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"taxonomybranch-"},(0,o.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/taxonomy-branch"},(0,o.kt)("inlineCode",{parentName:"a"},"TaxonomyBranch"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"TaxonomyBranch is an item within a taxonomyTree that maps out a Product Taxonomy\nhierarchy using Product Tags and Collections.")))}h.isMDXComponent=!0}}]);