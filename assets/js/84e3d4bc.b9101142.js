"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[3722],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=a.createContext({}),i=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=i(e.components);return a.createElement(d.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=i(t),y=o,h=s["".concat(d,".").concat(y)]||s[y]||p[y]||r;return t?a.createElement(h,c(c({ref:n},m),{},{components:t})):a.createElement(h,c({ref:n},m))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,c=new Array(r);c[0]=y;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[s]="string"==typeof e?e:o,c[1]=l;for(var i=2;i<r;i++)c[i]=t[i];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},94044:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>y,Bullet:()=>s,SpecifiedBy:()=>p,assets:()=>i,contentTitle:()=>l,default:()=>b,frontMatter:()=>c,metadata:()=>d,toc:()=>m});var a=t(87462),o=t(67294),r=t(3905);const c={id:"taxonomy-branch-connection",title:"TaxonomyBranchConnection",hide_table_of_contents:!1},l=void 0,d={unversionedId:"demand/api/graphql-admin/reference/objects/taxonomy-branch-connection",id:"demand/api/graphql-admin/reference/objects/taxonomy-branch-connection",title:"TaxonomyBranchConnection",description:"Paginate through TaxonomyBranches",source:"@site/docs/demand/api/graphql-admin/reference/objects/taxonomy-branch-connection.mdx",sourceDirName:"demand/api/graphql-admin/reference/objects",slug:"/demand/api/graphql-admin/reference/objects/taxonomy-branch-connection",permalink:"/demand/api/graphql-admin/reference/objects/taxonomy-branch-connection",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-admin/reference/objects/taxonomy-branch-connection.mdx",tags:[],version:"current",frontMatter:{id:"taxonomy-branch-connection",title:"TaxonomyBranchConnection",hide_table_of_contents:!1},sidebar:"demandApiAdminSidebar",previous:{title:"SupplierVariantHandlingCost",permalink:"/demand/api/graphql-admin/reference/objects/supplier-variant-handling-cost"},next:{title:"TaxonomyBranchEdge",permalink:"/demand/api/graphql-admin/reference/objects/taxonomy-branch-edge"}},i={},m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchConnection.<b>edges</b></code><Bullet /><code>[TaxonomyBranchEdge]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-taxonomybranchconnectionbedgesbcodetaxonomybranchedge--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchConnection.<b>nodes</b></code><Bullet /><code>[TaxonomyBranch]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-taxonomybranchconnectionbnodesbcodetaxonomybranch--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchConnection.<b>pageInfo</b></code><Bullet /><code>PageInfo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-taxonomybranchconnectionbpageinfobcodepageinfo--",level:4},{value:"Member of",id:"member-of",level:3}],s=()=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,r.kt)(o.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),h={toc:m,Bullet:s,SpecifiedBy:p,Badge:y};function b(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Paginate through TaxonomyBranches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type TaxonomyBranchConnection {\n  edges: [TaxonomyBranchEdge]!\n  nodes: [TaxonomyBranch]!\n  pageInfo: PageInfo!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchconnectionbedgesbcodetaxonomybranchedge--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchConnection.",(0,r.kt)("b",null,"edges"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/taxonomy-branch-edge"},(0,r.kt)("inlineCode",{parentName:"a"},"[TaxonomyBranchEdge]!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchconnectionbnodesbcodetaxonomybranch--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchConnection.",(0,r.kt)("b",null,"nodes"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/taxonomy-branch"},(0,r.kt)("inlineCode",{parentName:"a"},"[TaxonomyBranch]!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchconnectionbpageinfobcodepageinfo--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchConnection.",(0,r.kt)("b",null,"pageInfo"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/objects/page-info"},(0,r.kt)("inlineCode",{parentName:"a"},"PageInfo!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/demand/api/graphql-admin/reference/objects/demand-hq"},(0,r.kt)("inlineCode",{parentName:"a"},"DemandHq")),"  ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"}),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/demand/api/graphql-admin/reference/objects/taxonomy-branch"},(0,r.kt)("inlineCode",{parentName:"a"},"TaxonomyBranch")),"  ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);