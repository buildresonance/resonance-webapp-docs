"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[30002],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),d=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),l=d(r),f=a,m=l["".concat(u,".").concat(f)]||l[f]||c[f]||p;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,i=new Array(p);i[0]=l;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var d=2;d<p;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},77431:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var n=r(87462),a=r(63366),p=(r(67294),r(3905)),i=["components"],o={id:"update-partner",title:"updatePartner"},u=void 0,d={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",id:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",title:"updatePartner",description:"Update an existing partner",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/mutations",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner.mdx",tags:[],version:"current",frontMatter:{id:"update-partner",title:"updatePartner"},sidebar:"apisSidebar",previous:{title:"updatePartnerIdentity",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner-identity"},next:{title:"updateUserNotificationStatus",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user-notification-status"}},s={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>input</code> (<code>PartnerUpdateInput</code>)",id:"input-partnerupdateinput",level:4},{value:"Type",id:"type",level:3},{value:"<code>Partner</code>",id:"partner",level:4}],l={toc:c};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,p.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Update an existing partner"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"updatePartner(\n  input: PartnerUpdateInput!\n): Partner!\n\n")),(0,p.kt)("h3",{id:"arguments"},"Arguments"),(0,p.kt)("h4",{id:"input-partnerupdateinput"},(0,p.kt)("inlineCode",{parentName:"h4"},"input")," (",(0,p.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/inputs/partner-update-input"},(0,p.kt)("inlineCode",{parentName:"a"},"PartnerUpdateInput")),")"),(0,p.kt)("h3",{id:"type"},"Type"),(0,p.kt)("h4",{id:"partner"},(0,p.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/partner"},(0,p.kt)("inlineCode",{parentName:"a"},"Partner"))),(0,p.kt)("p",null,"Represents a Partner, the parent to an App, and the parent most component for Development"))}f.isMDXComponent=!0}}]);