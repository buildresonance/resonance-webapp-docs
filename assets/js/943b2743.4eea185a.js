"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[2],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),u=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),l=u(r),m=a,f=l["".concat(d,".").concat(m)]||l[m]||c[m]||i;return r?n.createElement(f,p(p({ref:t},s),{},{components:r})):n.createElement(f,p({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=l;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var u=2;u<i;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},7431:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return s},default:function(){return l}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),p=["components"],o={id:"update-partner",title:"updatePartner"},d=void 0,u={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",id:"developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",title:"updatePartner",description:"Update an existing partner",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/mutations",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner.mdx",tags:[],version:"current",frontMatter:{id:"update-partner",title:"updatePartner"},sidebar:"apisSidebar",previous:{title:"updatePartnerIdentity",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-partner-identity"},next:{title:"updateUserNotificationStatus",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/mutations/update-user-notification-status"}},s=[{value:"Arguments",id:"arguments",children:[{value:"<code>input</code> (PartnerUpdateInput)",id:"input-partnerupdateinput",children:[],level:4}],level:3},{value:"Type",id:"type",children:[{value:"Partner",id:"partner",children:[],level:4}],level:3}],c={toc:s};function l(e){var t=e.components,r=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Update an existing partner"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"updatePartner(\n  input: PartnerUpdateInput!\n): Partner!\n\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"input-partnerupdateinput"},(0,i.kt)("inlineCode",{parentName:"h4"},"input")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/inputs/partner-update-input"},(0,i.kt)("inlineCode",{parentName:"a"},"PartnerUpdateInput")),")"),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"partner"},(0,i.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/partner"},(0,i.kt)("inlineCode",{parentName:"a"},"Partner"))),(0,i.kt)("p",null,"Represents a Partner, the parent to an App, and the parent most component for Development"))}l.isMDXComponent=!0}}]);