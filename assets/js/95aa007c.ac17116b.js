"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[2677],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(n),m=r,g=s["".concat(d,".").concat(m)]||s[m]||l[m]||p;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,o=new Array(p);o[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<p;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},43698:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var a=n(87462),r=n(63366),p=(n(67294),n(3905)),o=["components"],i={id:"update-page-type-content",title:"updatePageTypeContent"},d=void 0,c={unversionedId:"developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content",id:"developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content",title:"updatePageTypeContent",description:"Update an existing PageTypeContent.",source:"@site/docs/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content.mdx",sourceDirName:"developers/demandhq-apis/demand-api/graphql/reference/mutations",slug:"/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page-type-content.mdx",tags:[],version:"current",frontMatter:{id:"update-page-type-content",title:"updatePageTypeContent"},sidebar:"apisSidebar",previous:{title:"updateNav",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-nav"},next:{title:"updatePage",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/mutations/update-page"}},u={},l=[{value:"Arguments",id:"arguments",level:3},{value:"<code>input</code> (<code>PageTypeContentUpdateInput</code>)",id:"input-pagetypecontentupdateinput",level:4},{value:"Type",id:"type",level:3},{value:"<code>PageTypeContent</code>",id:"pagetypecontent",level:4}],s={toc:l};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,p.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Update an existing PageTypeContent."),(0,p.kt)("p",null,"Requires the pagetypecontent/write scope on the associated DemandHq."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"updatePageTypeContent(\n  input: PageTypeContentUpdateInput!\n): PageTypeContent!\n\n")),(0,p.kt)("h3",{id:"arguments"},"Arguments"),(0,p.kt)("h4",{id:"input-pagetypecontentupdateinput"},(0,p.kt)("inlineCode",{parentName:"h4"},"input")," (",(0,p.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/demand-api/graphql/reference/inputs/page-type-content-update-input"},(0,p.kt)("inlineCode",{parentName:"a"},"PageTypeContentUpdateInput")),")"),(0,p.kt)("h3",{id:"type"},"Type"),(0,p.kt)("h4",{id:"pagetypecontent"},(0,p.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/demand-api/graphql/reference/objects/page-type-content"},(0,p.kt)("inlineCode",{parentName:"a"},"PageTypeContent"))),(0,p.kt)("p",null,"This holds content specific to a pageType. This is generally used on a page that lists all pages for a pageType."))}m.isMDXComponent=!0}}]);