"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[78998],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return g}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,p=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=d(t),g=a,m=u["".concat(c,".").concat(g)]||u[g]||s[g]||p;return t?r.createElement(m,o(o({ref:n},l),{},{components:t})):r.createElement(m,o({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var p=t.length,o=new Array(p);o[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<p;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},65151:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return s}});var r=t(87462),a=t(63366),p=(t(67294),t(3905)),o=["components"],i={id:"page-type-content",title:"pageTypeContent"},c=void 0,d={unversionedId:"developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content",id:"developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content",title:"pageTypeContent",description:"Get a pageTypeContent by pageType.",source:"@site/docs/developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content.mdx",sourceDirName:"developers/demandhq-apis/demand-api/graphql/reference/queries",slug:"/developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/demandhq-apis/demand-api/graphql/reference/queries/page-type-content.mdx",tags:[],version:"current",frontMatter:{id:"page-type-content",title:"pageTypeContent"},sidebar:"apisSidebar",previous:{title:"nav",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/queries/nav"},next:{title:"page",permalink:"/developers/demandhq-apis/demand-api/graphql/reference/queries/page"}},l={},s=[{value:"Arguments",id:"arguments",level:3},{value:"<code>pageTypeContentId</code> (<code>ID</code>)",id:"pagetypecontentid-id",level:4},{value:"Type",id:"type",level:3},{value:"<code>PageTypeContent</code>",id:"pagetypecontent",level:4}],u={toc:s};function g(e){var n=e.components,t=(0,a.Z)(e,o);return(0,p.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Get a pageTypeContent by pageType."),(0,p.kt)("p",null,"Requires the pagetypecontent/read scope on the associated DemandHq"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"pageTypeContent(\n  pageTypeContentId: ID!\n): PageTypeContent\n\n")),(0,p.kt)("h3",{id:"arguments"},"Arguments"),(0,p.kt)("h4",{id:"pagetypecontentid-id"},(0,p.kt)("inlineCode",{parentName:"h4"},"pageTypeContentId")," (",(0,p.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/demand-api/graphql/reference/scalars/id"},(0,p.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,p.kt)("h3",{id:"type"},"Type"),(0,p.kt)("h4",{id:"pagetypecontent"},(0,p.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/demand-api/graphql/reference/objects/page-type-content"},(0,p.kt)("inlineCode",{parentName:"a"},"PageTypeContent"))),(0,p.kt)("p",null,"This holds content specific to a pageType. This is generally used on a page that lists all pages for a pageType."))}g.isMDXComponent=!0}}]);