"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[40495],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return t?n.createElement(m,o(o({ref:r},l),{},{components:t})):n.createElement(m,o({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},38833:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var n=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],p={id:"variant-weight-unit",title:"VariantWeightUnit"},c=void 0,s={unversionedId:"developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit",id:"developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit",title:"VariantWeightUnit",description:"Metric or Standard Weight?",source:"@site/docs/developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit.mdx",sourceDirName:"developers/demandhq-apis/storefront-api/graphql/reference/enums",slug:"/developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-weight-unit.mdx",tags:[],version:"current",frontMatter:{id:"variant-weight-unit",title:"VariantWeightUnit"},sidebar:"apisSidebar",previous:{title:"VariantStandardizedColor",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/enums/variant-standardized-color"},next:{title:"CartAddOrUpdateItemsInput",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/inputs/cart-add-or-update-items-input"}},l={},u=[{value:"Values",id:"values",level:3},{value:"<code>GRAMS</code>",id:"grams",level:4},{value:"<code>LBS</code>",id:"lbs",level:4}],d={toc:u};function f(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Metric or Standard Weight?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"enum VariantWeightUnit {\n  GRAMS\n  LBS\n}\n")),(0,i.kt)("h3",{id:"values"},"Values"),(0,i.kt)("h4",{id:"grams"},(0,i.kt)("inlineCode",{parentName:"h4"},"GRAMS")),(0,i.kt)("h4",{id:"lbs"},(0,i.kt)("inlineCode",{parentName:"h4"},"LBS")))}f.isMDXComponent=!0}}]);