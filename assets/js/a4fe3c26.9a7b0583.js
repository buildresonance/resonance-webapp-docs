"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[81810],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},82637:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"Overall API Concepts",sidebar_position:1},i="Overall API Concepts",l={unversionedId:"concepts/api/overall-concepts",id:"concepts/api/overall-concepts",title:"Overall API Concepts",description:"The APIs are split into 3 different categories based on the area of the business they interact with: DemandHQ, Supplier, and Shared (both).",source:"@site/docs/concepts/api/overall-concepts.md",sourceDirName:"concepts/api",slug:"/concepts/api/overall-concepts",permalink:"/concepts/api/overall-concepts",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/concepts/api/overall-concepts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overall API Concepts",sidebar_position:1},sidebar:"conceptsSidebar",previous:{title:"User",permalink:"/concepts/identity/entities/User"},next:{title:"Authentication",permalink:"/concepts/api/authentication"}},p={},s=[{value:"Domains",id:"domains",level:2},{value:"Apps",id:"apps",level:2},{value:"IDs",id:"ids",level:2},{value:"GraphQL",id:"graphql",level:2},{value:"GraphQL Developer Tools",id:"graphql-developer-tools",level:3}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overall-api-concepts"},"Overall API Concepts"),(0,a.kt)("p",null,"The APIs are split into 3 different categories based on the area of the business they interact with: DemandHQ, Supplier, and Shared (both)."),(0,a.kt)("h2",{id:"domains"},"Domains"),(0,a.kt)("p",null,"The APIs, and generally concepts, are split into areas of context (domains):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Admin Identity: This API is not specific to Supply or Demand, and instead provide cross cutting functionality, having to do with "who am I".'),(0,a.kt)("li",{parentName:"ul"},"Supply: In general, these APIs are used to interact with Suppliers, and can be used to manage inventory or purchase orders."),(0,a.kt)("li",{parentName:"ul"},"Demand: This includes a Demand HQ Admin API, as well as a Storefront API. These APIs can be used to interact with Demand HQ's. This is either directly, in the case of the Admin API, or to populate a storefront, in the case of the Storefront and Search APIs.")),(0,a.kt)("p",null,"Each API is further split into domain groups, and details on these can be found in the API documentation."),(0,a.kt)("h2",{id:"apps"},"Apps"),(0,a.kt)("p",null,"Apps can be created for, and installed on, both Suppliers and DemandHQs. Inside the DemandHQ domain, you can create either Admin or Storefront apps. Apps will be specific to one of these three, however, and cannot cross the boundary to have more than one purpose."),(0,a.kt)("h2",{id:"ids"},"IDs"),(0,a.kt)("p",null,"IDs are prefixed with a 5-character type, split by a dash, and then have a date created at, sortable, random ID appended to it. i.e. ",(0,a.kt)("inlineCode",{parentName:"p"},"prdct-adthcnhT234podvntae%g"),". All IDs are globally unique to the platform."),(0,a.kt)("p",null,"Two IDs are UUIDs due to case insensitivity, and these are User IDs (UserNames) and App Client IDs."),(0,a.kt)("h2",{id:"graphql"},"GraphQL"),(0,a.kt)("p",null,"All APIs (with a few exceptions) for the platform are based on GraphQL."),(0,a.kt)("h3",{id:"graphql-developer-tools"},"GraphQL Developer Tools"),(0,a.kt)("p",null,"GraphQL related developer tools are a very common way to discover API functionality, and we support any of them that use the GraphQL introspection query. This includes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphiql"},"GraphiQL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphql-playground"},"GraphQL Playground")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.apollographql.com/docs/studio/explorer/"},"Apollo Studio"))),(0,a.kt)("p",null,"Note that you must authenticate in order to use these tools, however. A token can be obtained in the Identity Portal Developer Settings."),(0,a.kt)("p",null,"Reference documentation is also generated directly here for easy reference."))}d.isMDXComponent=!0}}]);