"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[82008],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>y});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=n.createContext({}),i=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=i(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=i(a),u=o,y=m["".concat(d,".").concat(u)]||m[u]||p[u]||r;return a?n.createElement(y,l(l({ref:t},s),{},{components:a})):n.createElement(y,l({ref:t},s))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c[m]="string"==typeof e?e:o,l[1]=c;for(var i=2;i<r;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},61808:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>m,SpecifiedBy:()=>p,assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>s});var n=a(87462),o=a(67294),r=a(3905);const l={id:"taxonomy-branch-create-input",title:"TaxonomyBranchCreateInput",hide_table_of_contents:!1},c=void 0,d={unversionedId:"demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input",id:"demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input",title:"TaxonomyBranchCreateInput",description:"The input for creating a TaxonomyBranch.",source:"@site/docs/demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input.mdx",sourceDirName:"demand/api/graphql-admin/reference/inputs",slug:"/demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input",permalink:"/demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-admin/reference/inputs/taxonomy-branch-create-input.mdx",tags:[],version:"current",frontMatter:{id:"taxonomy-branch-create-input",title:"TaxonomyBranchCreateInput",hide_table_of_contents:!1},sidebar:"demandApiAdminSidebar",previous:{title:"SupplierProductStandardizedColorFilterInput",permalink:"/demand/api/graphql-admin/reference/inputs/supplier-product-standardized-color-filter-input"},next:{title:"TaxonomyBranchUpdateInput",permalink:"/demand/api/graphql-admin/reference/inputs/taxonomy-branch-update-input"}},i={},s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>collectionId</b></code><Bullet /><code>ID</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbcollectionidbcodeid-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>demandHqId</b></code><Bullet /><code>ID!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbdemandhqidbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>parentTaxonomyBranchId</b></code><Bullet /><code>ID</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbparenttaxonomybranchidbcodeid-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>productTag</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbproducttagbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>storefrontIds</b></code><Bullet /><code>[ID!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbstorefrontidsbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>taxonomyLevel</b></code><Bullet /><code>TaxonomyLevel!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbtaxonomylevelbcodetaxonomylevel--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>taxonomyTree</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbtaxonomytreebcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>TaxonomyBranchCreateInput.<b>title</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-taxonomybranchcreateinputbtitlebcodestring--",level:4},{value:"Member of",id:"member-of",level:3}],m=()=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,r.kt)(o.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:s,Bullet:m,SpecifiedBy:p,Badge:u};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The input for creating a TaxonomyBranch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input TaxonomyBranchCreateInput {\n  collectionId: ID\n  demandHqId: ID!\n  parentTaxonomyBranchId: ID\n  productTag: String!\n  storefrontIds: [ID!]\n  taxonomyLevel: TaxonomyLevel!\n  taxonomyTree: String!\n  title: String!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbcollectionidbcodeid-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"collectionId"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID"))," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The collectionId associated with the TaxonomyBranch.\nNot required as a field, but is strongly suggested to be populated, and one is generally created with a TaxonomyBranch.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbdemandhqidbcodeid--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"demandHqId"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbparenttaxonomybranchidbcodeid-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"parentTaxonomyBranchId"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID"))," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"All TaxonomyBranches besides the root have a parentTaxonomyBranchId. Immutable.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbproducttagbcodestring--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"productTag"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The product tag associated with this TaxonomyBranch, used for filtering or display matching.")),(0,r.kt)("p",null,'On a Root TaxonomyBranch, this is generally a taxPrefix that is used in all child TaxonomyBranches,\ni.e. "Taxonomy" for child branch productTags like "Taxonomy,Category,T-Shirts"'),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbstorefrontidsbcodeid--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"storefrontIds"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"[ID!]"))," ",(0,r.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The storefronts this taxonomyTree is published to.\nThis is only present on the Root TaxonomyBranch of a taxonomyTree and applies to all child taxonomyBranches.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbtaxonomylevelbcodetaxonomylevel--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"taxonomyLevel"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/enums/taxonomy-level"},(0,r.kt)("inlineCode",{parentName:"a"},"TaxonomyLevel!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The level of the TaxonomyBranch in the hierarchy. Immutable.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbtaxonomytreebcodestring--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"taxonomyTree"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The tree this taxonomyBranch lies within. This has slug formatting (Lowercase, no spaces). Immutable.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-taxonomybranchcreateinputbtitlebcodestring--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyBranchCreateInput.",(0,r.kt)("b",null,"title"))),(0,r.kt)(m,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/demand/api/graphql-admin/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The name of the taxonomyBranch.")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/demand/api/graphql-admin/reference/mutations/create-taxonomy-branch"},(0,r.kt)("inlineCode",{parentName:"a"},"createTaxonomyBranch")),"  ",(0,r.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);