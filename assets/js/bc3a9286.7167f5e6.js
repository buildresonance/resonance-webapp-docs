"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[27621],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>b});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var o=n.createContext({}),d=function(e){var t=n.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},s=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(i),m=a,b=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return i?n.createElement(b,l(l({ref:t},s),{},{components:i})):n.createElement(b,l({ref:t},s))}));function b(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[p]="string"==typeof e?e:a,l[1]=c;for(var d=2;d<r;d++)l[d]=i[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},42703:(e,t,i)=>{i.r(t),i.d(t,{Badge:()=>m,Bullet:()=>p,SpecifiedBy:()=>u,assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=i(87462),a=i(67294),r=i(3905);const l={id:"public-identities",title:"publicIdentities",hide_table_of_contents:!1},c=void 0,o={unversionedId:"adminidentity/api/graphql-admin/reference/queries/public-identities",id:"adminidentity/api/graphql-admin/reference/queries/public-identities",title:"publicIdentities",description:"Get several public identities by their IDs.",source:"@site/docs/adminidentity/api/graphql-admin/reference/queries/public-identities.mdx",sourceDirName:"adminidentity/api/graphql-admin/reference/queries",slug:"/adminidentity/api/graphql-admin/reference/queries/public-identities",permalink:"/adminidentity/api/graphql-admin/reference/queries/public-identities",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/adminidentity/api/graphql-admin/reference/queries/public-identities.mdx",tags:[],version:"current",frontMatter:{id:"public-identities",title:"publicIdentities",hide_table_of_contents:!1},sidebar:"adminIdentityApiAdminSidebar",previous:{title:"publicApps",permalink:"/adminidentity/api/graphql-admin/reference/queries/public-apps"},next:{title:"publicIdentity",permalink:"/adminidentity/api/graphql-admin/reference/queries/public-identity"}},d={},s=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>publicIdentities.<b>after</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-publicidentitiesbafterbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>publicIdentities.<b>before</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-publicidentitiesbbeforebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>publicIdentities.<b>first</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-publicidentitiesbfirstbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>publicIdentities.<b>identityIds</b></code><Bullet /><code>[ID!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-publicidentitiesbidentityidsbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>publicIdentities.<b>last</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-publicidentitiesblastbcodeint-",level:4},{value:"Type",id:"type",level:3},{value:'<code>PublicIdentityConnection</code> <Badge class="secondary" text="object"/>',id:"publicidentityconnection-",level:4}],p=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{class:"badge badge--"+e.class},e.text)),b={toc:s,Bullet:p,SpecifiedBy:u,Badge:m};function f(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},b,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Get several public identities by their IDs.\nIn the case of using the identityIds arg, will return in exact order of the\nIDs passed in, with null for missing identities."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"publicIdentities(\n  after: String\n  before: String\n  first: Int\n  identityIds: [ID!]\n  last: Int\n): PublicIdentityConnection!\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publicidentitiesbafterbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"publicIdentities.",(0,r.kt)("b",null,"after"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Returns the elements in the list that come after the specified cursor.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publicidentitiesbbeforebcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"publicIdentities.",(0,r.kt)("b",null,"before"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Returns the elements in the list that come before the specified cursor.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publicidentitiesbfirstbcodeint-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"publicIdentities.",(0,r.kt)("b",null,"first"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Returns the first n elements from the list.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publicidentitiesbidentityidsbcodeid--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"publicIdentities.",(0,r.kt)("b",null,"identityIds"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"[ID!]"))," ",(0,r.kt)(m,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-publicidentitiesblastbcodeint-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"publicIdentities.",(0,r.kt)("b",null,"last"))),(0,r.kt)(p,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Returns the last n elements from the list.")),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"publicidentityconnection-"},(0,r.kt)("a",{parentName:"h4",href:"/adminidentity/api/graphql-admin/reference/objects/public-identity-connection"},(0,r.kt)("inlineCode",{parentName:"a"},"PublicIdentityConnection"))," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Paginate through PublicIdentities")))}f.isMDXComponent=!0}}]);