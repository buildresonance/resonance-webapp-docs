"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[98870],{3905:function(e,r,t){t.d(r,{Zo:function(){return o},kt:function(){return f}});var p=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);r&&(p=p.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,p)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,p,n=function(e,r){if(null==e)return{};var t,p,n={},a=Object.keys(e);for(p=0;p<a.length;p++)t=a[p],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(p=0;p<a.length;p++)t=a[p],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=p.createContext({}),l=function(e){var r=p.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},o=function(e){var r=l(e.components);return p.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return p.createElement(p.Fragment,{},r)}},d=p.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),d=l(t),f=n,m=d["".concat(s,".").concat(f)]||d[f]||c[f]||a;return t?p.createElement(m,i(i({ref:r},o),{},{components:t})):p.createElement(m,i({ref:r},o))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=d;var u={};for(var s in r)hasOwnProperty.call(r,s)&&(u[s]=r[s]);u.originalType=e,u.mdxType="string"==typeof e?e:n,i[1]=u;for(var l=2;l<a;l++)i[l]=t[l];return p.createElement.apply(null,i)}return p.createElement.apply(null,t)}d.displayName="MDXCreateElement"},16371:function(e,r,t){t.r(r),t.d(r,{assets:function(){return o},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return c}});var p=t(87462),n=t(63366),a=(t(67294),t(3905)),i=["components"],u={id:"supplier-variant-custom-data-upsert-input",title:"SupplierVariantCustomDataUpsertInput"},s=void 0,l={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input",id:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input",title:"SupplierVariantCustomDataUpsertInput",description:"The input type to upsert SupplierVariantCustomData.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/inputs",slug:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-custom-data-upsert-input.mdx",tags:[],version:"current",frontMatter:{id:"supplier-variant-custom-data-upsert-input",title:"SupplierVariantCustomDataUpsertInput"},sidebar:"apisSidebar",previous:{title:"SupplierVariantCreateInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-create-input"},next:{title:"SupplierVariantHandlingCostInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-handling-cost-input"}},o={},c=[{value:"Fields",id:"fields",level:3},{value:"<code>data</code> (<code>JSON</code>)",id:"data-json",level:4},{value:"<code>supplierId</code> (<code>ID</code>)",id:"supplierid-id",level:4},{value:"<code>supplierVariantId</code> (<code>ID</code>)",id:"suppliervariantid-id",level:4}],d={toc:c};function f(e){var r=e.components,t=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,p.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The input type to upsert SupplierVariantCustomData.\nThe data object is required, but is a partial update, and keys not mentioned will be left alone."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"input SupplierVariantCustomDataUpsertInput {\n  data: JSON!\n  supplierId: ID!\n  supplierVariantId: ID!\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"data-json"},(0,a.kt)("inlineCode",{parentName:"h4"},"data")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/json"},(0,a.kt)("inlineCode",{parentName:"a"},"JSON")),")"),(0,a.kt)("h4",{id:"supplierid-id"},(0,a.kt)("inlineCode",{parentName:"h4"},"supplierId")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,a.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,a.kt)("h4",{id:"suppliervariantid-id"},(0,a.kt)("inlineCode",{parentName:"h4"},"supplierVariantId")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,a.kt)("inlineCode",{parentName:"a"},"ID")),")"))}f.isMDXComponent=!0}}]);