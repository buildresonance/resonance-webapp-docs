"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[6304],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=n.createContext({}),s=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(a.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,h=d["".concat(a,".").concat(f)]||d[f]||u[f]||i;return t?n.createElement(h,c(c({ref:r},p),{},{components:t})):n.createElement(h,c({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=d;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<i;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},52037:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=t(87462),o=t(63366),i=(t(67294),t(3905)),c=["components"],l={id:"collections",title:"collections"},a=void 0,s={unversionedId:"developers/demandhq-apis/storefront-api/graphql/reference/queries/collections",id:"developers/demandhq-apis/storefront-api/graphql/reference/queries/collections",title:"collections",description:"List collections for a Storefront with optional filters.",source:"@site/docs/developers/demandhq-apis/storefront-api/graphql/reference/queries/collections.mdx",sourceDirName:"developers/demandhq-apis/storefront-api/graphql/reference/queries",slug:"/developers/demandhq-apis/storefront-api/graphql/reference/queries/collections",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/queries/collections",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/demandhq-apis/storefront-api/graphql/reference/queries/collections.mdx",tags:[],version:"current",frontMatter:{id:"collections",title:"collections"},sidebar:"apisSidebar",previous:{title:"collection",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/queries/collection"},next:{title:"customerCart",permalink:"/developers/demandhq-apis/storefront-api/graphql/reference/queries/customer-cart"}},p={},u=[{value:"Arguments",id:"arguments",level:3},{value:"<code>slugs</code> (<code>String</code>)",id:"slugs-string",level:4},{value:"Type",id:"type",level:3},{value:"<code>PublicCollectionConnectionWithSearch</code>",id:"publiccollectionconnectionwithsearch",level:4}],d={toc:u};function f(e){var r=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"List collections for a Storefront with optional filters."),(0,i.kt)("p",null,"Requires the publiccollection/read scope."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"collections(\n  slugs: [String]\n): PublicCollectionConnectionWithSearch!\n\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"slugs-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"slugs")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,i.kt)("p",null,"Filter Collections using slugs"),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"publiccollectionconnectionwithsearch"},(0,i.kt)("a",{parentName:"h4",href:"/developers/demandhq-apis/storefront-api/graphql/reference/objects/public-collection-connection-with-search"},(0,i.kt)("inlineCode",{parentName:"a"},"PublicCollectionConnectionWithSearch"))),(0,i.kt)("p",null,"Paginate through PublicCollections"))}f.isMDXComponent=!0}}]);