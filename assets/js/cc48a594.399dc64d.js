"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[6569],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),o=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=o(e.components);return i.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=o(n),f=r,h=u["".concat(d,".").concat(f)]||u[f]||c[f]||a;return n?i.createElement(h,s(s({ref:t},p),{},{components:n})):i.createElement(h,s({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var o=2;o<a;o++)s[o]=n[o];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3137:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return o},assets:function(){return p},toc:function(){return c},default:function(){return f}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),s=["components"],l={id:"public-identities",title:"publicIdentities"},d=void 0,o={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities",id:"developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities",title:"publicIdentities",description:"Get several public identities by their IDs.",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/queries",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identities.mdx",tags:[],version:"current",frontMatter:{id:"public-identities",title:"publicIdentities"},sidebar:"apisSidebar",previous:{title:"publicApps",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-apps"},next:{title:"publicIdentity",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/public-identity"}},p={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>after</code> (<code>String</code>)",id:"after-string",level:4},{value:"<code>before</code> (<code>String</code>)",id:"before-string",level:4},{value:"<code>first</code> (<code>Int</code>)",id:"first-int",level:4},{value:"<code>identityIds</code> (<code>ID</code>)",id:"identityids-id",level:4},{value:"<code>last</code> (<code>Int</code>)",id:"last-int",level:4},{value:"Type",id:"type",level:3},{value:"<code>PublicIdentityConnection</code>",id:"publicidentityconnection",level:4}],u={toc:c};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Get several public identities by their IDs.\nIn the case of using the identityIds arg, will return in exact order of the\nIDs passed in, with null for missing identities."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"publicIdentities(\n  after: String\n  before: String\n  first: Int\n  identityIds: [ID!]\n  last: Int\n): PublicIdentityConnection!\n\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"after-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"after")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,a.kt)("p",null,"Returns the elements in the list that come after the specified cursor."),(0,a.kt)("h4",{id:"before-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"before")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,a.kt)("p",null,"Returns the elements in the list that come before the specified cursor."),(0,a.kt)("h4",{id:"first-int"},(0,a.kt)("inlineCode",{parentName:"h4"},"first")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,a.kt)("p",null,"Returns the first n elements from the list."),(0,a.kt)("h4",{id:"identityids-id"},(0,a.kt)("inlineCode",{parentName:"h4"},"identityIds")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/id"},(0,a.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,a.kt)("h4",{id:"last-int"},(0,a.kt)("inlineCode",{parentName:"h4"},"last")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,a.kt)("p",null,"Returns the last n elements from the list."),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"publicidentityconnection"},(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/public-identity-connection"},(0,a.kt)("inlineCode",{parentName:"a"},"PublicIdentityConnection"))),(0,a.kt)("p",null,"Paginate through PublicIdentities"))}f.isMDXComponent=!0}}]);