"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[59406],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return d}});var n=t(67294);function p(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){p(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,p=function(e,r){if(null==e)return{};var t,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(p[t]=e[t]);return p}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,p=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=s(t),d=p,y=f["".concat(c,".").concat(d)]||f[d]||l[d]||o;return t?n.createElement(y,i(i({ref:r},u),{},{components:t})):n.createElement(y,i({ref:r},u))}));function d(e,r){var t=arguments,p=r&&r.mdxType;if("string"==typeof e||p){var o=t.length,i=new Array(o);i[0]=f;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:p,i[1]=a;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},26797:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var n=t(87462),p=t(63366),o=(t(67294),t(3905)),i=["components"],a={id:"purchase-order-notification-type",title:"PurchaseOrderNotificationType"},c=void 0,s={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",id:"developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",title:"PurchaseOrderNotificationType",description:"Used to determine how a supplier recieves Purchase Orders",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type.mdx",tags:[],version:"current",frontMatter:{id:"purchase-order-notification-type",title:"PurchaseOrderNotificationType"},sidebar:"apisSidebar",previous:{title:"FilterOperator",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/filter-operator"},next:{title:"ResonanceCurrency",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency"}},u={},l=[{value:"Values",id:"values",level:3},{value:"<code>WEBHOOK</code>",id:"webhook",level:4}],f={toc:l};function d(e){var r=e.components,t=(0,p.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Used to determine how a supplier recieves Purchase Orders"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum PurchaseOrderNotificationType {\n  WEBHOOK\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"webhook"},(0,o.kt)("inlineCode",{parentName:"h4"},"WEBHOOK")))}d.isMDXComponent=!0}}]);