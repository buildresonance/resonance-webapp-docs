"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[9406],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return d}});var t=n(7294);function p(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){p(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,p=function(e,r){if(null==e)return{};var n,t,p={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(p[n]=e[n]);return p}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,p=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=s(n),d=p,y=f["".concat(c,".").concat(d)]||f[d]||l[d]||o;return n?t.createElement(y,i(i({ref:r},u),{},{components:n})):t.createElement(y,i({ref:r},u))}));function d(e,r){var n=arguments,p=r&&r.mdxType;if("string"==typeof e||p){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:p,i[1]=a;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6797:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var t=n(3117),p=n(102),o=(n(7294),n(3905)),i=["components"],a={id:"purchase-order-notification-type",title:"PurchaseOrderNotificationType"},c=void 0,s={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",id:"developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",title:"PurchaseOrderNotificationType",description:"Used to determine how a supplier recieves Purchase Orders",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type.mdx",tags:[],version:"current",frontMatter:{id:"purchase-order-notification-type",title:"PurchaseOrderNotificationType"},sidebar:"apisSidebar",previous:{title:"AppType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/app-type"},next:{title:"ResonanceCurrency",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency"}},u=[{value:"Values",id:"values",children:[{value:"<code>WEBHOOK</code>",id:"webhook",children:[],level:4}],level:3}],l={toc:u};function f(e){var r=e.components,n=(0,p.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Used to determine how a supplier recieves Purchase Orders"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum PurchaseOrderNotificationType {\n  WEBHOOK\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"webhook"},(0,o.kt)("inlineCode",{parentName:"h4"},"WEBHOOK")))}f.isMDXComponent=!0}}]);