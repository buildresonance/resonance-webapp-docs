"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[97148],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return d}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),u=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):p(p({},r),e)),n},s=function(e){var r=u(e.components);return t.createElement(i.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,y=f["".concat(i,".").concat(d)]||f[d]||l[d]||a;return n?t.createElement(y,p(p({ref:r},s),{},{components:n})):t.createElement(y,p({ref:r},s))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=f;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,p[1]=c;for(var u=2;u<a;u++)p[u]=n[u];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},86760:function(e,r,n){n.r(r),n.d(r,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l}});var t=n(87462),o=n(63366),a=(n(67294),n(3905)),p=["components"],c={id:"resonance-currency",title:"ResonanceCurrency",hide_table_of_contents:!1},i=void 0,u={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency",id:"developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency",title:"ResonanceCurrency",description:"Used throughout the app to give a currency to price information",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-currency.mdx",tags:[],version:"current",frontMatter:{id:"resonance-currency",title:"ResonanceCurrency",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"PurchaseOrderNotificationType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/purchase-order-notification-type"},next:{title:"ResonanceLocaleType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/resonance-locale-type"}},s={},l=[{value:"Values",id:"values",level:3},{value:"<code>USD</code>",id:"usd",level:4}],f={toc:l};function d(e){var r=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,t.Z)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Used throughout the app to give a currency to price information"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"enum ResonanceCurrency {\n  USD\n}\n")),(0,a.kt)("h3",{id:"values"},"Values"),(0,a.kt)("h4",{id:"usd"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"USD"))))}d.isMDXComponent=!0}}]);