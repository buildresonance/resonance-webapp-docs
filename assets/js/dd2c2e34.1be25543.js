"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[3873],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var l=n.createContext({}),o=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=o(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=o(r),f=p,h=d["".concat(l,".").concat(f)]||d[f]||c[f]||i;return r?n.createElement(h,a(a({ref:t},s),{},{components:r})):n.createElement(h,a({ref:t},s))}));function f(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var i=r.length,a=new Array(i);a[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:p,a[1]=u;for(var o=2;o<i;o++)a[o]=r[o];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4580:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return o},assets:function(){return s},toc:function(){return c},default:function(){return f}});var n=r(7462),p=r(3366),i=(r(7294),r(3905)),a=["components"],u={id:"supplier-variant-weight-input",title:"SupplierVariantWeightInput"},l=void 0,o={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input",id:"developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input",title:"SupplierVariantWeightInput",description:"Input object to indicate both amount and unit of weight.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/inputs",slug:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-weight-input.mdx",tags:[],version:"current",frontMatter:{id:"supplier-variant-weight-input",title:"SupplierVariantWeightInput"},sidebar:"apisSidebar",previous:{title:"SupplierVariantUpdateInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supplier-variant-update-input"},next:{title:"SupplyEventSubscriptionCreateInput",permalink:"/developers/supplier-apis/supply-api/graphql/reference/inputs/supply-event-subscription-create-input"}},s={},c=[{value:"Fields",id:"fields",level:3},{value:"<code>amount</code> (<code>Float</code>)",id:"amount-float",level:4},{value:"<code>unit</code> (<code>SupplierVariantWeightUnit</code>)",id:"unit-suppliervariantweightunit",level:4}],d={toc:c};function f(e){var t=e.components,r=(0,p.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Input object to indicate both amount and unit of weight."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type SupplierVariantWeightInput {\n  amount: Float!\n  unit: SupplierVariantWeightUnit!\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"amount-float"},(0,i.kt)("inlineCode",{parentName:"h4"},"amount")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/float"},(0,i.kt)("inlineCode",{parentName:"a"},"Float")),")"),(0,i.kt)("h4",{id:"unit-suppliervariantweightunit"},(0,i.kt)("inlineCode",{parentName:"h4"},"unit")," (",(0,i.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-weight-unit"},(0,i.kt)("inlineCode",{parentName:"a"},"SupplierVariantWeightUnit")),")"))}f.isMDXComponent=!0}}]);