"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[55846],{3905:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>y});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=n.createContext({}),d=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},m=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=d(o),u=r,y=s["".concat(i,".").concat(u)]||s[u]||p[u]||a;return o?n.createElement(y,l(l({ref:t},m),{},{components:o})):n.createElement(y,l({ref:t},m))}));function y(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[s]="string"==typeof e?e:r,l[1]=c;for(var d=2;d<a;d++)l[d]=o[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},15153:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>u,Bullet:()=>s,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var n=o(87462),r=o(67294),a=o(3905);const l={id:"taxonomy-level",title:"TaxonomyLevel",hide_table_of_contents:!1},c=void 0,i={unversionedId:"demand/api/graphql-storefront/reference/enums/taxonomy-level",id:"demand/api/graphql-storefront/reference/enums/taxonomy-level",title:"TaxonomyLevel",description:"The level of the TaxonomyBranch in the hierarchy.",source:"@site/docs/demand/api/graphql-storefront/reference/enums/taxonomy-level.mdx",sourceDirName:"demand/api/graphql-storefront/reference/enums",slug:"/demand/api/graphql-storefront/reference/enums/taxonomy-level",permalink:"/demand/api/graphql-storefront/reference/enums/taxonomy-level",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/demand/api/graphql-storefront/reference/enums/taxonomy-level.mdx",tags:[],version:"current",frontMatter:{id:"taxonomy-level",title:"TaxonomyLevel",hide_table_of_contents:!1},sidebar:"demandApiStorefrontSidebar",previous:{title:"SortDirection",permalink:"/demand/api/graphql-storefront/reference/enums/sort-direction"},next:{title:"VariantDeliveryMethod",permalink:"/demand/api/graphql-storefront/reference/enums/variant-delivery-method"}},d={},m=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>CATEGORY</b></code>",id:"code-style-fontweight-normal-taxonomylevelbcategorybcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>DEPARTMENT</b></code>",id:"code-style-fontweight-normal-taxonomylevelbdepartmentbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>ROOT</b></code>",id:"code-style-fontweight-normal-taxonomylevelbrootbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>SUBCATEGORY1</b></code>",id:"code-style-fontweight-normal-taxonomylevelbsubcategory1bcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>SUBCATEGORY2</b></code>",id:"code-style-fontweight-normal-taxonomylevelbsubcategory2bcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>TaxonomyLevel.<b>SUBCATEGORY3</b></code>",id:"code-style-fontweight-normal-taxonomylevelbsubcategory3bcode",level:4},{value:"Member of",id:"member-of",level:3}],s=()=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,a.kt)(r.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:m,Bullet:s,SpecifiedBy:p,Badge:u};function f(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The level of the TaxonomyBranch in the hierarchy."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"enum TaxonomyLevel {\n  CATEGORY\n  DEPARTMENT\n  ROOT\n  SUBCATEGORY1\n  SUBCATEGORY2\n  SUBCATEGORY3\n}\n")),(0,a.kt)("h3",{id:"values"},"Values"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbcategorybcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"CATEGORY")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'The second most outer categorization for a Product, generally describing a\nbroad, but slightly refined grouping of products.\n"Clothing", "Shoes", "Computers", "TVs"')),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbdepartmentbcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"DEPARTMENT")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'The outermost categorization for a Product, generally describing a very broad grouping.\n"Apparel", "Electronics", "Home & Garden"')),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbrootbcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"ROOT")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Only a single TaxonomyBranch can live at this level, and it is the basis for the entire taxonomyTree.")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbsubcategory1bcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"SUBCATEGORY1")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'The third most outer categorization for a Product, generally describing a specific grouping of products.\n"T-Shirts", "Jeans", "Sneakers", "Laptops", "Smartphones"')),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbsubcategory2bcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"SUBCATEGORY2")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"An additional Subcategory level for a Product, generally describing a very specific grouping of products.")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-taxonomylevelbsubcategory3bcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"TaxonomyLevel.",(0,a.kt)("b",null,"SUBCATEGORY3")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"An additional Subcategory level for a Product, generally describing a very, very specific grouping of products.")),(0,a.kt)("h3",{id:"member-of"},"Member of"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/demand/api/graphql-storefront/reference/objects/public-taxonomy-branch"},(0,a.kt)("inlineCode",{parentName:"a"},"PublicTaxonomyBranch")),"  ",(0,a.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,a.kt)(s,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/demand/api/graphql-storefront/reference/queries/taxonomy-branches"},(0,a.kt)("inlineCode",{parentName:"a"},"taxonomyBranches")),"  ",(0,a.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);