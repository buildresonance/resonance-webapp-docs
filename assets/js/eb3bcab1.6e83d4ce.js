"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[5718],{3905:function(e,r,t){t.d(r,{Zo:function(){return o},kt:function(){return m}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),u=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},o=function(e){var r=u(e.components);return n.createElement(p.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,y=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return t?n.createElement(y,l(l({ref:r},o),{},{components:t})):n.createElement(y,l({ref:r},o))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=d;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var u=2;u<a;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3736:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return o},default:function(){return d}});var n=t(3117),i=t(102),a=(t(7294),t(3905)),l=["components"],s={id:"query-public-user-by-email",title:"queryPublicUserByEmail"},p=void 0,u={unversionedId:"developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email",id:"developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email",isDocsHomePage:!1,title:"queryPublicUserByEmail",description:"Given an email, returns PublicUser if the user exists. Exact match.",source:"@site/docs/developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email.mdx",sourceDirName:"developers/shared-apis/adminidentity-api/graphql/reference/queries",slug:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/shared-apis/adminidentity-api/graphql/reference/queries/query-public-user-by-email.mdx",tags:[],version:"current",frontMatter:{id:"query-public-user-by-email",title:"queryPublicUserByEmail"},sidebar:"apisSidebar",previous:{title:"partners",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/partners"},next:{title:"userDisplayName",permalink:"/developers/shared-apis/adminidentity-api/graphql/reference/queries/user-display-name"}},o=[{value:"Arguments",id:"arguments",children:[{value:"<code>email</code> (String!)",id:"email-string",children:[],level:4}],level:3},{value:"Type",id:"type",children:[{value:"PublicUser",id:"publicuser",children:[],level:4}],level:3}],c={toc:o};function d(e){var r=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Given an email, returns PublicUser if the user exists. Exact match."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"queryPublicUserByEmail(\n  email: String!\n): PublicUser\n\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"email-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"email")," (",(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"publicuser"},(0,a.kt)("a",{parentName:"h4",href:"/developers/shared-apis/adminidentity-api/graphql/reference/objects/public-user"},(0,a.kt)("inlineCode",{parentName:"a"},"PublicUser"))),(0,a.kt)("p",null,"This User type is returned on routes with no permissions attached to protect Personally Identifiable Information"))}d.isMDXComponent=!0}}]);