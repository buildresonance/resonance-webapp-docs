"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[982],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=n.createContext({}),u=function(e){var r=n.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(o.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,p=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(t),d=i,h=f["".concat(o,".").concat(d)]||f[d]||c[d]||p;return t?n.createElement(h,a(a({ref:r},s),{},{components:t})):n.createElement(h,a({ref:r},s))}));function d(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var p=t.length,a=new Array(p);a[0]=f;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<p;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1705:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var n=t(3117),i=t(102),p=(t(7294),t(3905)),a=["components"],l={id:"supplier-variant-weight",title:"SupplierVariantWeight"},o=void 0,u={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight",id:"developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight",title:"SupplierVariantWeight",description:"Object to indicate both amount and unit of weight.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/objects",slug:"/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-weight.mdx",tags:[],version:"current",frontMatter:{id:"supplier-variant-weight",title:"SupplierVariantWeight"},sidebar:"apisSidebar",previous:{title:"SupplierVariantSupplement",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant-supplement"},next:{title:"SupplierVariant",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supplier-variant"}},s=[{value:"Fields",id:"fields",children:[{value:"<code>amount</code> (Float)",id:"amount-float",children:[],level:4},{value:"<code>unit</code> (SupplierVariantWeightUnit)",id:"unit-suppliervariantweightunit",children:[],level:4}],level:3}],c={toc:s};function f(e){var r=e.components,t=(0,i.Z)(e,a);return(0,p.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Object to indicate both amount and unit of weight."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"type SupplierVariantWeight {\n  amount: Float!\n  unit: SupplierVariantWeightUnit!\n}\n")),(0,p.kt)("h3",{id:"fields"},"Fields"),(0,p.kt)("h4",{id:"amount-float"},(0,p.kt)("inlineCode",{parentName:"h4"},"amount")," (",(0,p.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/float"},(0,p.kt)("inlineCode",{parentName:"a"},"Float")),")"),(0,p.kt)("h4",{id:"unit-suppliervariantweightunit"},(0,p.kt)("inlineCode",{parentName:"h4"},"unit")," (",(0,p.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supplier-variant-weight-unit"},(0,p.kt)("inlineCode",{parentName:"a"},"SupplierVariantWeightUnit")),")"))}f.isMDXComponent=!0}}]);