"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[38393],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return y}});var n=r(67294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,o=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),f=i(r),y=p,d=f["".concat(u,".").concat(y)]||f[y]||c[y]||o;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function y(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=r.length,l=new Array(o);l[0]=f;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:p,l[1]=a;for(var i=2;i<o;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},72429:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return c}});var n=r(87462),p=r(63366),o=(r(67294),r(3905)),l=["components"],a={id:"supply-event-protocol",title:"SupplyEventProtocol",hide_table_of_contents:!1},u=void 0,i={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol",id:"developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol",title:"SupplyEventProtocol",description:"The protocol to use to supply the event.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/enums",slug:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol",draft:!1,editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol.mdx",tags:[],version:"current",frontMatter:{id:"supply-event-protocol",title:"SupplyEventProtocol",hide_table_of_contents:!1},sidebar:"apisSidebar",previous:{title:"SupplyEventMutationType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-mutation-type"},next:{title:"SupplyEventSubscriptionEntityType",permalink:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type"}},s={},c=[{value:"Values",id:"values",level:3},{value:"<code>LAMBDA</code>",id:"lambda",level:4}],f={toc:c};function y(e){var t=e.components,r=(0,p.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The protocol to use to supply the event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum SupplyEventProtocol {\n  LAMBDA\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"lambda"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"LAMBDA"))),(0,o.kt)("p",null,"For internal use only. Permissions are difficult to setup for this protocol."))}y.isMDXComponent=!0}}]);