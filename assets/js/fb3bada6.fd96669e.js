"use strict";(self.webpackChunkresonance_webapp_docs=self.webpackChunkresonance_webapp_docs||[]).push([[8614],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var p=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);t&&(p=p.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,p)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,p,i=function(e,t){if(null==e)return{};var n,p,i={},r=Object.keys(e);for(p=0;p<r.length;p++)n=r[p],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(p=0;p<r.length;p++)n=r[p],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=p.createContext({}),l=function(e){var t=p.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return p.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return p.createElement(p.Fragment,{},t)}},d=p.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),y=i,h=d["".concat(o,".").concat(y)]||d[y]||c[y]||r;return n?p.createElement(h,s(s({ref:t},u),{},{components:n})):p.createElement(h,s({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<r;l++)s[l]=n[l];return p.createElement.apply(null,s)}return p.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3584:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var p=n(3117),i=n(102),r=(n(7294),n(3905)),s=["components"],a={id:"supply-event-subscription",title:"SupplyEventSubscription"},o=void 0,l={unversionedId:"developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription",id:"developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription",title:"SupplyEventSubscription",description:"Entity representing a subscription to supply events.",source:"@site/docs/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription.mdx",sourceDirName:"developers/supplier-apis/supply-api/graphql/reference/objects",slug:"/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription",editUrl:"https://github.com/obfns/resonance-webapp-docs/tree/main/docs/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription.mdx",tags:[],version:"current",frontMatter:{id:"supply-event-subscription",title:"SupplyEventSubscription"},sidebar:"apisSidebar",previous:{title:"SupplyEventSubscriptionEdge",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event-subscription-edge"},next:{title:"SupplyEvent",permalink:"/developers/supplier-apis/supply-api/graphql/reference/objects/supply-event"}},u=[{value:"Fields",id:"fields",children:[{value:"<code>createdAt</code> (String)",id:"createdat-string",children:[],level:4},{value:"<code>endpoint</code> (String)",id:"endpoint-string",children:[],level:4},{value:"<code>eventSubscriptionId</code> (ID)",id:"eventsubscriptionid-id",children:[],level:4},{value:"<code>itemType</code> (String)",id:"itemtype-string",children:[],level:4},{value:"<code>mutationType</code> (SupplyEventMutationType)",id:"mutationtype-supplyeventmutationtype",children:[],level:4},{value:"<code>protocol</code> (SupplyEventProtocol)",id:"protocol-supplyeventprotocol",children:[],level:4},{value:"<code>subscriptionEntityId</code> (ID)",id:"subscriptionentityid-id",children:[],level:4},{value:"<code>subscriptionEntityType</code> (SupplyEventSubscriptionEntityType)",id:"subscriptionentitytype-supplyeventsubscriptionentitytype",children:[],level:4},{value:"<code>subscriptionOwnerId</code> (ID)",id:"subscriptionownerid-id",children:[],level:4},{value:"<code>updatedAt</code> (String)",id:"updatedat-string",children:[],level:4},{value:"<code>updatedBy</code> (ID)",id:"updatedby-id",children:[],level:4}],level:3}],c={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,p.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Entity representing a subscription to supply events."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type SupplyEventSubscription {\n  createdAt: String!\n  endpoint: String!\n  eventSubscriptionId: ID!\n  itemType: String!\n  mutationType: SupplyEventMutationType!\n  protocol: SupplyEventProtocol!\n  subscriptionEntityId: ID!\n  subscriptionEntityType: SupplyEventSubscriptionEntityType!\n  subscriptionOwnerId: ID!\n  updatedAt: String!\n  updatedBy: ID!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"createdat-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"createdAt")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("h4",{id:"endpoint-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"endpoint")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"Changes based on protocol, but indicates the exact target."),(0,r.kt)("h4",{id:"eventsubscriptionid-id"},(0,r.kt)("inlineCode",{parentName:"h4"},"eventSubscriptionId")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,r.kt)("h4",{id:"itemtype-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"itemType")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"The SupplyEntity to subscribe to, all lowercase."),(0,r.kt)("h4",{id:"mutationtype-supplyeventmutationtype"},(0,r.kt)("inlineCode",{parentName:"h4"},"mutationType")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-mutation-type"},(0,r.kt)("inlineCode",{parentName:"a"},"SupplyEventMutationType")),")"),(0,r.kt)("p",null,"What type of event to listen for."),(0,r.kt)("h4",{id:"protocol-supplyeventprotocol"},(0,r.kt)("inlineCode",{parentName:"h4"},"protocol")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-protocol"},(0,r.kt)("inlineCode",{parentName:"a"},"SupplyEventProtocol")),")"),(0,r.kt)("p",null,"The protocol to use to supply the event."),(0,r.kt)("h4",{id:"subscriptionentityid-id"},(0,r.kt)("inlineCode",{parentName:"h4"},"subscriptionEntityId")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,r.kt)("p",null,'This is the "main" entity that is being subscribed to.'),(0,r.kt)("p",null,"This can either be a ResonanceDomainEntityId (SupplierId, DemandHqId) to subscribe to an entity to which they have access.\nThis is useful to monitor things like changes to Products and such."),(0,r.kt)("p",null,"Or an Identity (AppClientId, UserName) to subscribe to THEMSELF.\nThis is useful to monitor things like app installations, uninstallations, and such."),(0,r.kt)("p",null,"subscriptionEntityType indicates what type of entity this is."),(0,r.kt)("h4",{id:"subscriptionentitytype-supplyeventsubscriptionentitytype"},(0,r.kt)("inlineCode",{parentName:"h4"},"subscriptionEntityType")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/enums/supply-event-subscription-entity-type"},(0,r.kt)("inlineCode",{parentName:"a"},"SupplyEventSubscriptionEntityType")),")"),(0,r.kt)("p",null,"This distinguishes between the types of subscriptions."),(0,r.kt)("h4",{id:"subscriptionownerid-id"},(0,r.kt)("inlineCode",{parentName:"h4"},"subscriptionOwnerId")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID")),")"),(0,r.kt)("p",null,"The app (not appClient) or user that owns the subscription."),(0,r.kt)("h4",{id:"updatedat-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"updatedAt")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("h4",{id:"updatedby-id"},(0,r.kt)("inlineCode",{parentName:"h4"},"updatedBy")," (",(0,r.kt)("a",{parentName:"h4",href:"/developers/supplier-apis/supply-api/graphql/reference/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID")),")"))}d.isMDXComponent=!0}}]);